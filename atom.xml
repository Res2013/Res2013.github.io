<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Res2013博客</title>
  <subtitle>优秀不够!你是否无可替代?</subtitle>
  <link href="//atom.xml" rel="self"/>
  
  <link href="http://Res2013.github.io/ss/"/>
  <updated>2016-10-21T13:59:11.731Z</updated>
  <id>http://Res2013.github.io/ss/</id>
  
  <author>
    <name>Res2013</name>
    <email>1033857564@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>快速运行Android开源项目的正确方式</title>
    <link href="http://Res2013.github.io/ss/2016/10/21/%E5%BF%AB%E9%80%9F%E8%BF%90%E8%A1%8C%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%AD%A3%E7%A1%AE%E6%96%B9%E5%BC%8F/"/>
    <id>http://Res2013.github.io/ss/2016/10/21/快速运行开源项目的正确方式/</id>
    <published>2016-10-21T12:52:00.000Z</published>
    <updated>2016-10-21T13:59:11.731Z</updated>
    
    <content type="html">&lt;h2 id=&quot;传统打开开源项目方式&quot;&gt;&lt;a href=&quot;#传统打开开源项目方式&quot; class=&quot;headerlink&quot; title=&quot;传统打开开源项目方式&quot;&gt;&lt;/a&gt;传统打开开源项目方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;1.下载源码&lt;br&gt;2.打开Android Studio&lt;br&gt;3.导入项目&lt;br&gt;4.Sync gradle&lt;br&gt;5.运行项目&lt;br&gt;&amp;emsp;&amp;emsp;因为&lt;code&gt;Android Studio&lt;/code&gt;很吃内存,启动需要费不少时间,且编译、运行更卡。如果我们仅仅是想得到apk看下效果而运行&lt;code&gt;Android Studio&lt;/code&gt;那就太麻烦了,要是同时看多个项目要么就一个个工程切换,要么同时打开多个&lt;code&gt;Android Studio&lt;/code&gt;窗口那更是卡的飞起啊。那有没有更好的方式呢,答案肯定是有的,请往下看!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;快速的打开方式&quot;&gt;&lt;a href=&quot;#快速的打开方式&quot; class=&quot;headerlink&quot; title=&quot;快速的打开方式&quot;&gt;&lt;/a&gt;快速的打开方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;下载&lt;code&gt;Android Studio&lt;/code&gt;源码,利用&lt;code&gt;Android Studio&lt;/code&gt;项目中内置的&lt;code&gt;gradle wrapper&lt;/code&gt;来进行编译、打包、运行工程,大概流程如下:&lt;br&gt;&lt;code&gt;Windows&lt;/code&gt;系统采用如下方式:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd projectDir // cd到工程的根目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew clean // 移除所有的编译输出文件,如apk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew build // 生成apk并执行lint检测编译&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果想编译、打包、安装一步操作完成,可以这么做:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd projectDir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew installDebug // 安装debug版apk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;更快速的运行Github上源码的方式&quot;&gt;&lt;a href=&quot;#更快速的运行Github上源码的方式&quot; class=&quot;headerlink&quot; title=&quot;更快速的运行Github上源码的方式&quot;&gt;&lt;/a&gt;更快速的运行Github上源码的方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;你只需要安装这么一个工具,就可以一”键”下载、编译、打包、运行。该工具地址为:&lt;br&gt;&lt;a href=&quot;https://github.com/cesarferreira/dryrun&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/cesarferreira/dryrun&lt;/a&gt;&lt;br&gt;安装该工具之后只需要执行一句命令:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dryrun https://github.com/cesarferreira/android-helloworld&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;tips: &lt;code&gt;dryrun&lt;/code&gt;是一个&lt;code&gt;gem&lt;/code&gt;,它是基于&lt;code&gt;ruby&lt;/code&gt;的,如果对于&lt;code&gt;ruby&lt;/code&gt;不是很了解,安装起来比较耗时虽然高版本&lt;code&gt;ruby&lt;/code&gt;已经内置了&lt;code&gt;gem&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Gradle包下载失败解决方法&quot;&gt;&lt;a href=&quot;#Gradle包下载失败解决方法&quot; class=&quot;headerlink&quot; title=&quot;Gradle包下载失败解决方法&quot;&gt;&lt;/a&gt;Gradle包下载失败解决方法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;如果不翻墙直接下载&lt;code&gt;gradle&lt;/code&gt;包很大可能会失败,那么此时把下载链接复制到迅雷里下载,下载完成后把该&lt;code&gt;zip&lt;/code&gt;文件复制到&lt;code&gt;C:\Users\Administrator\.gradle\wrapper\dists\gradle-2.14.1-all\8bnwg5hd3w55iofp58khbp6yv&lt;/code&gt;文件夹里(文件夹名字和UUID有关,这里视具体情况做相应修改)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Gradle-Build下载依赖jar包失败解决方法&quot;&gt;&lt;a href=&quot;#Gradle-Build下载依赖jar包失败解决方法&quot; class=&quot;headerlink&quot; title=&quot;Gradle Build下载依赖jar包失败解决方法&quot;&gt;&lt;/a&gt;Gradle Build下载依赖jar包失败解决方法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;Windows系统下gradle默认的依赖存放地址为:&lt;br&gt;&lt;code&gt;C:\Users\Administrator\.gradle\caches\modules-2\files-2.1&lt;/code&gt;,那么你还是将该&lt;code&gt;jar&lt;/code&gt;包下载地址复制到迅雷里,下载完成后在依赖存放目录下找到对应的包名目录(下载地址里包含了包名),然后拷贝进去,此时记得删除该包下文件否则会因为文件被锁&lt;code&gt;build&lt;/code&gt;失败。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;1.在利用&lt;code&gt;gradlew&lt;/code&gt;运行&lt;code&gt;Android&lt;/code&gt;项目之前需要检查&lt;code&gt;gradle&lt;/code&gt;,&lt;code&gt;buildTools&lt;/code&gt;,&lt;code&gt;comileSdk&lt;/code&gt;版本是否与本地一致,如果不一致则报错。&lt;br&gt;2.&lt;code&gt;Ndk&lt;/code&gt;工程注意修改&lt;code&gt;local.properties&lt;/code&gt;文件中&lt;code&gt;sdk&lt;/code&gt;和&lt;code&gt;ndk&lt;/code&gt;的路径,以及删除工程中&lt;code&gt;.externalNativeBuild&lt;/code&gt;文件夹中&lt;code&gt;cmake&lt;/code&gt;文件夹(这里是按照官网最新的CMake方式,而非ndk-build方式)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者 &lt;a href=&quot;https://www.github.com/Res2013&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Res2013&lt;/a&gt;&lt;br&gt;2016 年 10月 21日&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传统打开开源项目方式&quot;&gt;&lt;a href=&quot;#传统打开开源项目方式&quot; class=&quot;headerlink&quot; title=&quot;传统打开开源项目方式&quot;&gt;&lt;/a&gt;传统打开开源项目方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;1.下载源码&lt;br&gt;2.打开Android Studio&lt;br&gt;3.导入项目&lt;br&gt;4.Sync gradle&lt;br&gt;5.运行项目&lt;br&gt;&amp;emsp;&amp;emsp;因为&lt;code&gt;Android Studio&lt;/code&gt;很吃内存,启动需要费不少时间,且编译、运行更卡。如果我们仅仅是想得到apk看下效果而运行&lt;code&gt;Android Studio&lt;/code&gt;那就太麻烦了,要是同时看多个项目要么就一个个工程切换,要么同时打开多个&lt;code&gt;Android Studio&lt;/code&gt;窗口那更是卡的飞起啊。那有没有更好的方式呢,答案肯定是有的,请往下看!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;快速的打开方式&quot;&gt;&lt;a href=&quot;#快速的打开方式&quot; class=&quot;headerlink&quot; title=&quot;快速的打开方式&quot;&gt;&lt;/a&gt;快速的打开方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;下载&lt;code&gt;Android Studio&lt;/code&gt;源码,利用&lt;code&gt;Android Studio&lt;/code&gt;项目中内置的&lt;code&gt;gradle wrapper&lt;/code&gt;来进行编译、打包、运行工程,大概流程如下:&lt;br&gt;&lt;code&gt;Windows&lt;/code&gt;系统采用如下方式:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd projectDir // cd到工程的根目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew clean // 移除所有的编译输出文件,如apk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew build // 生成apk并执行lint检测编译&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果想编译、打包、安装一步操作完成,可以这么做:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd projectDir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew installDebug // 安装debug版apk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="快速运行开源项目" scheme="http://Res2013.github.io/ss/categories/%E5%BF%AB%E9%80%9F%E8%BF%90%E8%A1%8C%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="gradle" scheme="http://Res2013.github.io/ss/tags/gradle/"/>
    
      <category term="Ndk" scheme="http://Res2013.github.io/ss/tags/Ndk/"/>
    
      <category term="CMake" scheme="http://Res2013.github.io/ss/tags/CMake/"/>
    
      <category term="快速运行" scheme="http://Res2013.github.io/ss/tags/%E5%BF%AB%E9%80%9F%E8%BF%90%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>RxAndroid入门(一)</title>
    <link href="http://Res2013.github.io/ss/2016/05/26/RxAndroid%E5%85%A5%E9%97%A8(%E4%B8%80)/"/>
    <id>http://Res2013.github.io/ss/2016/05/26/RxAndroid入门(一)/</id>
    <published>2016-05-26T14:20:43.000Z</published>
    <updated>2016-05-26T16:50:23.546Z</updated>
    
    <content type="html">&lt;h2 id=&quot;什么是RxAndroid？&quot;&gt;&lt;a href=&quot;#什么是RxAndroid？&quot; class=&quot;headerlink&quot; title=&quot;什么是RxAndroid？&quot;&gt;&lt;/a&gt;什么是RxAndroid？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;RxAndroid&lt;/code&gt;是基于响应式扩展框架&lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RxJava&lt;/a&gt;的&lt;code&gt;Android&lt;/code&gt;实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;RxAndroid的优点？&quot;&gt;&lt;a href=&quot;#RxAndroid的优点？&quot; class=&quot;headerlink&quot; title=&quot;RxAndroid的优点？&quot;&gt;&lt;/a&gt;RxAndroid的优点？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;a href=&quot;https://github.com/ReactiveX/RxAndroid&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RxAndroid&lt;/a&gt;将大量的类绑定到&lt;code&gt;RxJava&lt;/code&gt;，使得在&lt;code&gt;Android&lt;/code&gt;应用中编写响应式组件变得非常直观、简单。并且它可以优雅地处理异步请求，配合上&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lambda表达式&lt;/a&gt;尤其是当中的&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;方法引用&lt;/a&gt;，可以大大简化回调函数的处理，提高编码效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;如何在Android-Studio中使用？&quot;&gt;&lt;a href=&quot;#如何在Android-Studio中使用？&quot; class=&quot;headerlink&quot; title=&quot;如何在Android Studio中使用？&quot;&gt;&lt;/a&gt;如何在Android Studio中使用？&lt;/h2&gt;&lt;h3 id=&quot;在build-gradle中配置&quot;&gt;&lt;a href=&quot;#在build-gradle中配置&quot; class=&quot;headerlink&quot; title=&quot;在build.gradle中配置&quot;&gt;&lt;/a&gt;在build.gradle中配置&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compile &amp;apos;com.jakewharton:butterknife:7.0.1&amp;apos; // ButterKnife注解库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compile &amp;apos;io.reactivex:rxandroid:1.2.0&amp;apos; // RxAndroid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compile &amp;apos;io.reactivex:rxjava:1.1.5&amp;apos; // RxJava&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;在代码中使用&quot;&gt;&lt;a href=&quot;#在代码中使用&quot; class=&quot;headerlink&quot; title=&quot;在代码中使用&quot;&gt;&lt;/a&gt;在代码中使用&lt;/h3&gt;&lt;h4 id=&quot;创建一个观察者对象发出数据&quot;&gt;&lt;a href=&quot;#创建一个观察者对象发出数据&quot; class=&quot;headerlink&quot; title=&quot;创建一个观察者对象发出数据&quot;&gt;&lt;/a&gt;创建一个观察者对象发出数据&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 这里指定了订阅者订阅的事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 如果没有一个订阅者,则观察者不发送任何事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Observable&amp;lt;String&amp;gt; mObservable = Observable.create(  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Observable.OnSubscribe&amp;lt;String&amp;gt;() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Subscriber&amp;lt;? &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; String&amp;gt; sub)&lt;/span&gt; &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sub.onNext(&lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;// 发送事件  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sub.onCompleted();&lt;span class=&quot;comment&quot;&gt;// 完成事件  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;指定一个线程来传递数据&quot;&gt;&lt;a href=&quot;#指定一个线程来传递数据&quot; class=&quot;headerlink&quot; title=&quot;指定一个线程来传递数据&quot;&gt;&lt;/a&gt;指定一个线程来传递数据&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;观察者&lt;code&gt;Observable&lt;/code&gt;发送数据给主线程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mObservable.observeOn(AndroidSchedulers.mainThread());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;观察者分发订阅的事件&quot;&gt;&lt;a href=&quot;#观察者分发订阅的事件&quot; class=&quot;headerlink&quot; title=&quot;观察者分发订阅的事件&quot;&gt;&lt;/a&gt;观察者分发订阅的事件&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;主线程把数据传递给订阅者&lt;code&gt;Subscriber&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mObservable.subscribe(mSubscriber1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mobservable.subscribe(mSubscriber2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;创建若干个订阅者处理数据&quot;&gt;&lt;a href=&quot;#创建若干个订阅者处理数据&quot; class=&quot;headerlink&quot; title=&quot;创建若干个订阅者处理数据&quot;&gt;&lt;/a&gt;创建若干个订阅者处理数据&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;订阅者最终处理数据。上面例子是主线程传递数据的，所以这里传递和接收的方式是同步的。其它很多时候传递、接收方式可以是异步的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Subscriber&amp;lt;String&amp;gt; mSubscriber1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Subscriber&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onNext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123; mTvText.setText(s); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCompleted&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Throwable e)&lt;/span&gt; &lt;/span&gt;&amp;#123; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Subscriber&amp;lt;String&amp;gt; mSubscriber2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Subscriber&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onNext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Toast.makeText(MainActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, s,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCompleted&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Throwable e)&lt;/span&gt; &lt;/span&gt;&amp;#123; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用Lambda表达式重构代码&quot;&gt;&lt;a href=&quot;#使用Lambda表达式重构代码&quot; class=&quot;headerlink&quot; title=&quot;使用Lambda表达式重构代码&quot;&gt;&lt;/a&gt;使用Lambda表达式重构代码&lt;/h3&gt;&lt;h4 id=&quot;在build-gradle中配置-1&quot;&gt;&lt;a href=&quot;#在build-gradle中配置-1&quot; class=&quot;headerlink&quot; title=&quot;在build.gradle中配置&quot;&gt;&lt;/a&gt;在build.gradle中配置&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;Gradle 2.1&lt;/code&gt;以上且安装&lt;code&gt;JDK8&lt;/code&gt;才可以如此使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;plugins &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id &amp;quot;me.tatarka.retrolambda&amp;quot; version &amp;quot;3.2.4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compileOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sourceCompatibility JavaVersion.VERSION_1_8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetCompatibility JavaVersion.VERSION_1_8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;开始重构代码&quot;&gt;&lt;a href=&quot;#开始重构代码&quot; class=&quot;headerlink&quot; title=&quot;开始重构代码&quot;&gt;&lt;/a&gt;开始重构代码&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Bind&lt;/span&gt;(R.id.tv_text) TextView mTvText;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ButterKnife.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        * 当方法参数和返回值与Lambda表达式相同时，可以使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        * 方法名代替，这种就是更为简单的方法引用(References)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 创建观察者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Observable&amp;lt;String&amp;gt; observable = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Observable.create(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;::handOutEvent); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 分发订阅事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        observable.observeOn(AndroidSchedulers.mainThread());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        observable.subscribe(mTvText::setText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        observable.subscribe(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;::showToast);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handOutEvent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Subscriber subscriber)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        subscriber.onNext(&lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 发送事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        subscriber.onCompleted(); &lt;span class=&quot;comment&quot;&gt;// 完成事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 显示Toast&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showToast&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Toast.makeText(MainActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, s, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;作者 &lt;a href=&quot;https://www.github.com/Res2013&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Res2013&lt;/a&gt;&lt;br&gt;2016 年 05月 26日&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是RxAndroid？&quot;&gt;&lt;a href=&quot;#什么是RxAndroid？&quot; class=&quot;headerlink&quot; title=&quot;什么是RxAndroid？&quot;&gt;&lt;/a&gt;什么是RxAndroid？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;RxAndroid&lt;/code&gt;是基于响应式扩展框架&lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot;&gt;RxJava&lt;/a&gt;的&lt;code&gt;Android&lt;/code&gt;实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;RxAndroid的优点？&quot;&gt;&lt;a href=&quot;#RxAndroid的优点？&quot; class=&quot;headerlink&quot; title=&quot;RxAndroid的优点？&quot;&gt;&lt;/a&gt;RxAndroid的优点？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;a href=&quot;https://github.com/ReactiveX/RxAndroid&quot;&gt;RxAndroid&lt;/a&gt;将大量的类绑定到&lt;code&gt;RxJava&lt;/code&gt;，使得在&lt;code&gt;Android&lt;/code&gt;应用中编写响应式组件变得非常直观、简单。并且它可以优雅地处理异步请求，配合上&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;Lambda表达式&lt;/a&gt;尤其是当中的&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html&quot;&gt;方法引用&lt;/a&gt;，可以大大简化回调函数的处理，提高编码效率。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android开发框架" scheme="http://Res2013.github.io/ss/categories/Android%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="RxAndroid" scheme="http://Res2013.github.io/ss/tags/RxAndroid/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse下Android JNI开发方式之一</title>
    <link href="http://Res2013.github.io/ss/2016/05/17/Eclipse%E4%B8%8BAndroid-JNI%E5%BC%80%E5%8F%91%E6%96%B9%E5%BC%8F%E4%B9%8B%E4%B8%80/"/>
    <id>http://Res2013.github.io/ss/2016/05/17/Eclipse下Android-JNI开发方式之一/</id>
    <published>2016-05-16T17:00:45.000Z</published>
    <updated>2016-05-16T17:06:50.029Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Eclipse下Android-JNI开发方式之一&quot;&gt;&lt;a href=&quot;#Eclipse下Android-JNI开发方式之一&quot; class=&quot;headerlink&quot; title=&quot;Eclipse下Android JNI开发方式之一&quot;&gt;&lt;/a&gt;Eclipse下Android JNI开发方式之一&lt;/h1&gt;&lt;h2 id=&quot;创建一个Android工程&quot;&gt;&lt;a href=&quot;#创建一个Android工程&quot; class=&quot;headerlink&quot; title=&quot;创建一个Android工程&quot;&gt;&lt;/a&gt;创建一个Android工程&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example.jnitest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.TextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TextView mTextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTextView = (TextView) findViewById(R.id.tv_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        JNITest jni = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JNITest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String str = jni.getJNIString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTextView.setText(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;设计一个JNI接口&quot;&gt;&lt;a href=&quot;#设计一个JNI接口&quot; class=&quot;headerlink&quot; title=&quot;设计一个JNI接口&quot;&gt;&lt;/a&gt;设计一个JNI接口&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example.jnitest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JNITest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getJNIString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;编译JNI生成头文件&quot;&gt;&lt;a href=&quot;#编译JNI生成头文件&quot; class=&quot;headerlink&quot; title=&quot;编译JNI生成头文件&quot;&gt;&lt;/a&gt;编译JNI生成头文件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;在终端中&lt;code&gt;cd&lt;/code&gt;到该工程的&lt;code&gt;JNITest&lt;/code&gt;类所在目录下，输入:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ javac TestJNI.java&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;这时候会生成一个&lt;code&gt;JNITest.class&lt;/code&gt;文件，剪切到&lt;code&gt;/bin/com/example/jnitest目录下&lt;/code&gt;，如果该目录不存在则手动创建，然后输入:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ javah -jni com.example.jnitest.JNITest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;这个时候会生成一个&lt;code&gt;com_exmpale_jnitest_JNITest.h&lt;/code&gt;文件，这就是上面的&lt;code&gt;Java&lt;/code&gt;接口的&lt;code&gt;C/C++&lt;/code&gt;头文件，打开这个文件可以看到&lt;code&gt;Eclipse&lt;/code&gt;已经为我们自动完成了接口函数的声明：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* DO NOT EDIT THIS FILE - it is machine generated */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* Header for class com_example_jnitest_JNITest */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifndef&lt;/span&gt; _Included_com_example_jnitest_JNITest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; _Included_com_example_jnitest_JNITest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Class:     com_example_jnitest_JNITest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Method:    init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Signature: ()Z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jboolean JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jnitest_JNITest_init&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jobject)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Class:     com_example_jnitest_JNITest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Method:    getJNIString&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Signature: ()Ljava/lang/String;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jnitest_JNITest_getJNIString&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jobject)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Class:     com_example_jnitest_JNITest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Method:    destroy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Signature: ()V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jnitest_JNITest_destroy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jobject)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;C-C-实现JNI接口&quot;&gt;&lt;a href=&quot;#C-C-实现JNI接口&quot; class=&quot;headerlink&quot; title=&quot;C/C++实现JNI接口&quot;&gt;&lt;/a&gt;C/C++实现JNI接口&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;上面生成了&lt;code&gt;JNI&lt;/code&gt;的&lt;code&gt;C/C++&lt;/code&gt;头文件后，就可以在&lt;code&gt;C&lt;/code&gt;层实现&lt;code&gt;JNI&lt;/code&gt;接口了。在Project下新建一个&lt;code&gt;jni&lt;/code&gt;文件夹，然后把生成的头文件拷贝到该文件夹里，并且在该文件夹下新建一个&lt;code&gt;jnitest.c&lt;/code&gt;文件和&lt;code&gt;Android.mk&lt;/code&gt;文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;jnitest.c&lt;/code&gt;文件如下图：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;com_example_jnitest_JNITest.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jnitest_JNITest_getJNIString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		JNIEnv *env, jobject obj)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return (*env) -&amp;gt; NewStringUTF(env,&lt;span class=&quot;string&quot;&gt;&quot;Res2013&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Android.mk&lt;/code&gt;文件如下图：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_PATH := $(call my-dir)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include $(CLEAR_VARS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_MODULE := jnitest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_SRC_FILES := jniTest.c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include $(BUILD_SHARED_LIBRARY)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;编译生成-so文件&quot;&gt;&lt;a href=&quot;#编译生成-so文件&quot; class=&quot;headerlink&quot; title=&quot;编译生成.so文件&quot;&gt;&lt;/a&gt;编译生成.so文件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;在终端进入该项目的&lt;code&gt;jni&lt;/code&gt;目录下，使用命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ndk-build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么生成的&lt;code&gt;jnitest.so&lt;/code&gt;文件会自动添加到&lt;code&gt;libs/armeabi&lt;/code&gt;目录下&lt;/p&gt;
&lt;h2 id=&quot;最后直接运行android程序就OK了&quot;&gt;&lt;a href=&quot;#最后直接运行android程序就OK了&quot; class=&quot;headerlink&quot; title=&quot;最后直接运行android程序就OK了&quot;&gt;&lt;/a&gt;最后直接运行android程序就OK了&lt;/h2&gt;&lt;p&gt;作者 &lt;a href=&quot;https://www.github.com/Res2013&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Res2013&lt;/a&gt;&lt;br&gt;2016 年 05月 17日&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Eclipse下Android-JNI开发方式之一&quot;&gt;&lt;a href=&quot;#Eclipse下Android-JNI开发方式之一&quot; class=&quot;headerlink&quot; title=&quot;Eclipse下Android JNI开发方式之一&quot;&gt;&lt;/a&gt;Eclipse下Android JNI开发方式之一&lt;/h1&gt;&lt;h2 id=&quot;创建一个Android工程&quot;&gt;&lt;a href=&quot;#创建一个Android工程&quot; class=&quot;headerlink&quot; title=&quot;创建一个Android工程&quot;&gt;&lt;/a&gt;创建一个Android工程&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example.jnitest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.TextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TextView mTextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTextView = (TextView) findViewById(R.id.tv_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        JNITest jni = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JNITest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String str = jni.getJNIString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTextView.setText(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;设计一个JNI接口&quot;&gt;&lt;a href=&quot;#设计一个JNI接口&quot; class=&quot;headerlink&quot; title=&quot;设计一个JNI接口&quot;&gt;&lt;/a&gt;设计一个JNI接口&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example.jnitest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JNITest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getJNIString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Android开发" scheme="http://Res2013.github.io/ss/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://Res2013.github.io/ss/tags/Android/"/>
    
      <category term="JNI" scheme="http://Res2013.github.io/ss/tags/JNI/"/>
    
  </entry>
  
  <entry>
    <title>字符编码浅谈</title>
    <link href="http://Res2013.github.io/ss/2016/05/16/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E6%B5%85%E8%B0%88/"/>
    <id>http://Res2013.github.io/ss/2016/05/16/字符编码浅谈/</id>
    <published>2016-05-15T17:27:18.000Z</published>
    <updated>2016-05-15T18:21:26.206Z</updated>
    
    <content type="html">&lt;h2 id=&quot;为什么有字符编码&quot;&gt;&lt;a href=&quot;#为什么有字符编码&quot; class=&quot;headerlink&quot; title=&quot;为什么有字符编码?&quot;&gt;&lt;/a&gt;为什么有字符编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能够处理。最早的时候只有127个大小写英文字母、数字和一些符号被编码到计算机里,称为&lt;code&gt;ASCII&lt;/code&gt;编码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是Unicode编码&quot;&gt;&lt;a href=&quot;#什么是Unicode编码&quot; class=&quot;headerlink&quot; title=&quot;什么是Unicode编码?&quot;&gt;&lt;/a&gt;什么是Unicode编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;Unicode&lt;/code&gt;编码也叫做统一码、万国码、单一码，是计算机科学领域里的一项业界标准，包括字符集、编码方案等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;为什么有Unicode编码&quot;&gt;&lt;a href=&quot;#为什么有Unicode编码&quot; class=&quot;headerlink&quot; title=&quot;为什么有Unicode编码?&quot;&gt;&lt;/a&gt;为什么有Unicode编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;全世界有几千多种语言，如中文有自己制定的&lt;code&gt;GB2312&lt;/code&gt;编码，日文有&lt;code&gt;Shift_JIS&lt;/code&gt;编码等等，那么如果在多语言混合的文本中就会出现乱码。那么这个时候&lt;code&gt;Unicode&lt;/code&gt;编码应运而生，所有语言都统一使用同一套编码，这样就不会出现乱码问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;为什么有UTF-8编码&quot;&gt;&lt;a href=&quot;#为什么有UTF-8编码&quot; class=&quot;headerlink&quot; title=&quot;为什么有UTF-8编码?&quot;&gt;&lt;/a&gt;为什么有UTF-8编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;虽然统一了编码格式，解决了乱码问题，但是新的问题又产生了，是什么呢?&lt;br&gt;&lt;code&gt;ASCII&lt;/code&gt;编码是1个字节，Unicode编码通常是2个字节，如下图所示:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;ASCII&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Unicode&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;01000001&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;00000000 01000001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘0’&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;00110000&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;00000000 00110000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;那么如果你所写的文本基本上是类似字符&lt;code&gt;A&lt;/code&gt;和字符&lt;code&gt;0&lt;/code&gt;这样的数据的话，使用&lt;code&gt;Unicode&lt;/code&gt;编码就会比&lt;code&gt;ASCII&lt;/code&gt;编码多出一倍的存储空间，在存储和传输上就会非常不划算。所以，此时”可变长编码”的&lt;code&gt;UTF-8&lt;/code&gt;编码应运而生。&lt;/p&gt;
&lt;h2 id=&quot;通用字符编码工作方式&quot;&gt;&lt;a href=&quot;#通用字符编码工作方式&quot; class=&quot;headerlink&quot; title=&quot;通用字符编码工作方式&quot;&gt;&lt;/a&gt;通用字符编码工作方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;在计算机内存中，都统一使用&lt;code&gt;Unicode&lt;/code&gt;编码。当你需要保存数据到计算机硬盘或者需要通过网络传输数据的时候，就可以转换成&lt;code&gt;UTF-8&lt;/code&gt;编码；当你需要用编辑器编辑的时候，就可以把&lt;code&gt;UTF-8&lt;/code&gt;编码的字符转成&lt;code&gt;Unicode&lt;/code&gt;字符存到内存中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;运用环境&quot;&gt;&lt;a href=&quot;#运用环境&quot; class=&quot;headerlink&quot; title=&quot;运用环境&quot;&gt;&lt;/a&gt;运用环境&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;例如:一般网页编程的时候会在&lt;code&gt;JSP&lt;/code&gt;页面添加：&lt;br&gt;&lt;figure class=&quot;highlight jsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;meta http-equiv=&lt;span class=&quot;string&quot;&gt;&quot;content-type&quot;&lt;/span&gt; content=&lt;span class=&quot;string&quot;&gt;&quot;text/html;charset=utf-8&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;因为Servlet规范默认是使用ISO-8559-1编码，所以也需要设置编码格式，如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;request.setCharacterEncoding(&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.setContentType(&lt;span class=&quot;string&quot;&gt;&quot;text/html;charset=utf-8&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;值得注意的是:当你设置响应的编码格式是&lt;code&gt;utf-8&lt;/code&gt;，在&lt;code&gt;TCP/IP Monitor&lt;/code&gt;截获到的数据显示可能会乱码，为什么呢？这是因为一般本地&lt;code&gt;MyEclipse&lt;/code&gt;默认编码、解码格式是&lt;code&gt;gbk&lt;/code&gt;，当流向&lt;code&gt;MyEclipse&lt;/code&gt;界面输出的数据编码格式是&lt;code&gt;utf-8&lt;/code&gt;，那么解码后的数据就会出现乱码。&lt;br&gt;&amp;emsp;&amp;emsp;一般的Java程序，文件流的默认编码格式是在&lt;code&gt;JVM&lt;/code&gt;刚启动的时候从本机系统配置文件读取的，这点也要记住！&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;临时想到一点: 本文网址是&lt;code&gt;http://res2013.github.io/2016/05/16/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E6%B5%85%E8%B0%88/&lt;/code&gt;，那么后面的这个字符串&lt;code&gt;%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E6%B5%85%E8%B0%88&lt;/code&gt;是相关的API用&lt;code&gt;%&lt;/code&gt;符号把十六进制数隔开了，去掉&lt;code&gt;%&lt;/code&gt;符号，每三个十六进制数对应三个字节，也就是对应一个汉字，刚好十八个十六进制数，对应十八个字节即是六个汉字，也就是这篇文章的题目”字符编码浅谈”,这里用到的就是&lt;code&gt;utf-8&lt;/code&gt;编码(utf-8编码中，汉字通常是3个字节，只有生僻的字符是4-6个字节)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者 &lt;a href=&quot;https://www.github.com/Res2013&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Res2013&lt;/a&gt;&lt;br&gt;2016 年 05月 16日&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么有字符编码&quot;&gt;&lt;a href=&quot;#为什么有字符编码&quot; class=&quot;headerlink&quot; title=&quot;为什么有字符编码?&quot;&gt;&lt;/a&gt;为什么有字符编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能够处理。最早的时候只有127个大小写英文字母、数字和一些符号被编码到计算机里,称为&lt;code&gt;ASCII&lt;/code&gt;编码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是Unicode编码&quot;&gt;&lt;a href=&quot;#什么是Unicode编码&quot; class=&quot;headerlink&quot; title=&quot;什么是Unicode编码?&quot;&gt;&lt;/a&gt;什么是Unicode编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;Unicode&lt;/code&gt;编码也叫做统一码、万国码、单一码，是计算机科学领域里的一项业界标准，包括字符集、编码方案等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;为什么有Unicode编码&quot;&gt;&lt;a href=&quot;#为什么有Unicode编码&quot; class=&quot;headerlink&quot; title=&quot;为什么有Unicode编码?&quot;&gt;&lt;/a&gt;为什么有Unicode编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;全世界有几千多种语言，如中文有自己制定的&lt;code&gt;GB2312&lt;/code&gt;编码，日文有&lt;code&gt;Shift_JIS&lt;/code&gt;编码等等，那么如果在多语言混合的文本中就会出现乱码。那么这个时候&lt;code&gt;Unicode&lt;/code&gt;编码应运而生，所有语言都统一使用同一套编码，这样就不会出现乱码问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="知识理解" scheme="http://Res2013.github.io/ss/categories/%E7%9F%A5%E8%AF%86%E7%90%86%E8%A7%A3/"/>
    
    
      <category term="字符编码" scheme="http://Res2013.github.io/ss/tags/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>像玉的石头</title>
    <link href="http://Res2013.github.io/ss/2016/05/15/%E5%83%8F%E7%8E%89%E7%9A%84%E7%9F%B3%E5%A4%B4/"/>
    <id>http://Res2013.github.io/ss/2016/05/15/像玉的石头/</id>
    <published>2016-05-14T17:12:34.000Z</published>
    <updated>2016-05-14T17:16:23.890Z</updated>
    
    <content type="html">&lt;p&gt;你说相遇是休止符的前奏&lt;br&gt;你说结局是道不尽的悔疚&lt;br&gt;你说黑夜让人失声无法嘶吼&lt;br&gt;你说孤独让人沉溺忘了求救&lt;br&gt;我心弦易动音纷纷&lt;br&gt;后来都化成世间赞美的裂纹&lt;br&gt;直到恐惧布满诱人的全身&lt;br&gt;像玉的石头坚硬是不破碎的借口&lt;br&gt;美丽是赶不走的忧愁&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;你的笑是教人贪杯的毒酒&lt;br&gt;醉生梦死不过似是而非的出走&lt;br&gt;歇斯底里亦无人感同身受&lt;br&gt;粉身碎骨也许才最享受&lt;/p&gt;
&lt;p&gt;你说掌纹是解不开的魔咒&lt;br&gt;你说命运是没名字的情仇&lt;br&gt;你说拥抱让人温暖不敢奢求&lt;br&gt;你说疼痛让人麻木丢掉温柔&lt;br&gt;我心弦易动音纷纷&lt;br&gt;后来都化成世间赞美的裂纹&lt;br&gt;直到恐惧布满诱人的全身&lt;br&gt;像玉的石头&lt;br&gt;坚硬是不破碎的借口&lt;br&gt;美丽是赶不走的忧愁&lt;br&gt;你的笑是教人贪杯的毒酒&lt;br&gt;醉生梦死不过似是而非的出走&lt;br&gt;歇斯底里亦无人感同身受&lt;br&gt;粉身碎骨也许才最享受&lt;/p&gt;
&lt;p&gt;像玉的石头&lt;br&gt;愿你远离恶言相向&lt;br&gt;愿你找回孤独一掷的疯狂&lt;br&gt;像玉的石头&lt;br&gt;愿你真实一如往常&lt;br&gt;愿你走在只属于你的路上&lt;br&gt;像玉的石头&lt;br&gt;愿你不再那么匆忙&lt;br&gt;愿你能有值得停留的家乡 &lt;/p&gt;
&lt;p&gt;作者:不详&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;你说相遇是休止符的前奏&lt;br&gt;你说结局是道不尽的悔疚&lt;br&gt;你说黑夜让人失声无法嘶吼&lt;br&gt;你说孤独让人沉溺忘了求救&lt;br&gt;我心弦易动音纷纷&lt;br&gt;后来都化成世间赞美的裂纹&lt;br&gt;直到恐惧布满诱人的全身&lt;br&gt;像玉的石头坚硬是不破碎的借口&lt;br&gt;美丽是赶不走的忧愁&lt;br&gt;
    
    </summary>
    
      <category term="诗句欣赏" scheme="http://Res2013.github.io/ss/categories/%E8%AF%97%E5%8F%A5%E6%AC%A3%E8%B5%8F/"/>
    
    
      <category term="诗句" scheme="http://Res2013.github.io/ss/tags/%E8%AF%97%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建静态博客并部署到GitHub</title>
    <link href="http://Res2013.github.io/ss/2016/05/14/GitHub%E4%B8%8A%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <id>http://Res2013.github.io/ss/2016/05/14/GitHub上用Hexo搭建静态博客/</id>
    <published>2016-05-14T03:38:57.000Z</published>
    <updated>2016-05-14T11:59:19.953Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;这篇文章主要是记录利用Hexo搭建静态博客并部署到GitHub.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Hexo简介&quot;&gt;&lt;a href=&quot;#Hexo简介&quot; class=&quot;headerlink&quot; title=&quot;Hexo简介&quot;&gt;&lt;/a&gt;Hexo简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;hexo&lt;/strong&gt; 是一个基于&lt;code&gt;Node.js&lt;/code&gt;的静态博客程序，代码托管在&lt;a href=&quot;http://www.github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;上。&lt;/p&gt;
&lt;h3 id=&quot;为什么用Hexo&quot;&gt;&lt;a href=&quot;#为什么用Hexo&quot; class=&quot;headerlink&quot; title=&quot;为什么用Hexo&quot;&gt;&lt;/a&gt;为什么用Hexo&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Hexo&lt;/code&gt;简单优雅，而且风格多变，适合搭建个人博客，且支持多平台&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;h3 id=&quot;安装msysgit和node-js&quot;&gt;&lt;a href=&quot;#安装msysgit和node-js&quot; class=&quot;headerlink&quot; title=&quot;安装msysgit和node.js&quot;&gt;&lt;/a&gt;安装&lt;a href=&quot;https://git-for-windows.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;msysgit&lt;/a&gt;和&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node.js&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;利用&lt;code&gt;node.js&lt;/code&gt;里自带的&lt;code&gt;npm&lt;/code&gt;安装&lt;code&gt;hexo&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;开始使用&quot;&gt;&lt;a href=&quot;#开始使用&quot; class=&quot;headerlink&quot; title=&quot;开始使用&quot;&gt;&lt;/a&gt;开始使用&lt;/h2&gt;&lt;h3 id=&quot;创建站点&quot;&gt;&lt;a href=&quot;#创建站点&quot; class=&quot;headerlink&quot; title=&quot;创建站点&quot;&gt;&lt;/a&gt;创建站点&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init &amp;lt;blogfolder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &amp;lt;blogfolder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装所依赖的插件&quot;&gt;&lt;a href=&quot;#安装所依赖的插件&quot; class=&quot;headerlink&quot; title=&quot;安装所依赖的插件&quot;&gt;&lt;/a&gt;安装所依赖的插件&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &amp;lt;blogfolder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;下载主题&quot;&gt;&lt;a href=&quot;#下载主题&quot; class=&quot;headerlink&quot; title=&quot;下载主题&quot;&gt;&lt;/a&gt;下载主题&lt;/h3&gt;&lt;p&gt;我目前用的是比较火的Next主题&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; git@github.com:iissnan/hexo-theme-next.git themes/next&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下载的主题放到&lt;code&gt;blogfolder&lt;/code&gt;里的&lt;code&gt;thems/next&lt;/code&gt;目录下&lt;/p&gt;
&lt;h3 id=&quot;配置站点的-config-yml文件&quot;&gt;&lt;a href=&quot;#配置站点的-config-yml文件&quot; class=&quot;headerlink&quot; title=&quot;配置站点的_config.yml文件&quot;&gt;&lt;/a&gt;配置站点的_config.yml文件&lt;/h3&gt;&lt;p&gt;复制过来的主题在&lt;code&gt;_config.yml&lt;/code&gt;中配置,如:&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;theme: theme-name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多配置信息参考&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo官方文档&lt;/a&gt;和&lt;a href=&quot;http://theme-next.iissnan.com/theme-settings.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NexT主题配置文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;更多文章排版信息请访问&lt;a href=&quot;https://www.zybuluo.com/mdeditor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Cmd Markdown编辑阅读器&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;本地测试博客&quot;&gt;&lt;a href=&quot;#本地测试博客&quot; class=&quot;headerlink&quot; title=&quot;本地测试博客&quot;&gt;&lt;/a&gt;本地测试博客&lt;/h3&gt;&lt;h4 id=&quot;执行命令&quot;&gt;&lt;a href=&quot;#执行命令&quot; class=&quot;headerlink&quot; title=&quot;执行命令&quot;&gt;&lt;/a&gt;执行命令&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generator// 可简写`hexo g`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server// 调试模式可以加上`--debug`,也可简写为`hexo s`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过&lt;code&gt;localhost:4000&lt;/code&gt;本地访问博客站点&lt;/p&gt;
&lt;h3 id=&quot;部署博客到Github上&quot;&gt;&lt;a href=&quot;#部署博客到Github上&quot; class=&quot;headerlink&quot; title=&quot;部署博客到Github上&quot;&gt;&lt;/a&gt;部署博客到Github上&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;前提条件是GitHub上已添加&lt;code&gt;SSH Key&lt;/code&gt;&lt;a href=&quot;https://help.github.com/articles/checking-for-existing-ssh-keys/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub SSH Keys Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GitHub上新建一个项目,项目名必须为:&lt;code&gt;username.github.io&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;配置站点的-config-yml文件-1&quot;&gt;&lt;a href=&quot;#配置站点的-config-yml文件-1&quot; class=&quot;headerlink&quot; title=&quot;配置站点的_config.yml文件&quot;&gt;&lt;/a&gt;配置站点的&lt;code&gt;_config.yml&lt;/code&gt;文件&lt;/h4&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	type: git// Hexo更新到3.0以后type由github改成了git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	repository: git@github.com:username/username.github.io.git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;	branch: master&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;部署到username-github-io项目上&quot;&gt;&lt;a href=&quot;#部署到username-github-io项目上&quot; class=&quot;headerlink&quot; title=&quot;部署到username.github.io项目上&quot;&gt;&lt;/a&gt;部署到&lt;code&gt;username.github.io&lt;/code&gt;项目上&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy// 可简写为`hexo d`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;作者 &lt;a href=&quot;https://github.com/Res2013&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Res2013&lt;/a&gt;&lt;br&gt;2016 年 05月 14日&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这篇文章主要是记录利用Hexo搭建静态博客并部署到GitHub.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Hexo简介&quot;&gt;&lt;a href=&quot;#Hexo简介&quot; class=&quot;headerlink&quot; title=&quot;Hexo简介&quot;&gt;&lt;/a&gt;Hexo简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;hexo&lt;/strong&gt; 是一个基于&lt;code&gt;Node.js&lt;/code&gt;的静态博客程序，代码托管在&lt;a href=&quot;http://www.github.com&quot;&gt;GitHub&lt;/a&gt;上。&lt;/p&gt;
&lt;h3 id=&quot;为什么用Hexo&quot;&gt;&lt;a href=&quot;#为什么用Hexo&quot; class=&quot;headerlink&quot; title=&quot;为什么用Hexo&quot;&gt;&lt;/a&gt;为什么用Hexo&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Hexo&lt;/code&gt;简单优雅，而且风格多变，适合搭建个人博客，且支持多平台&lt;/p&gt;
    
    </summary>
    
      <category term="软件详细使用步骤" scheme="http://Res2013.github.io/ss/categories/%E8%BD%AF%E4%BB%B6%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4/"/>
    
    
      <category term="Hexo" scheme="http://Res2013.github.io/ss/tags/Hexo/"/>
    
      <category term="Node.js" scheme="http://Res2013.github.io/ss/tags/Node-js/"/>
    
  </entry>
  
</feed>
