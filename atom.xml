<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Herry博客</title>
  <subtitle>一年一年不是人生，一念一念才是人生！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://Res2013.github.io/ss/"/>
  <updated>2018-06-24T11:56:57.137Z</updated>
  <id>http://Res2013.github.io/ss/</id>
  
  <author>
    <name>Herry</name>
    <email>1033857564@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何抽象数据类型？</title>
    <link href="http://Res2013.github.io/ss/2018/06/24/%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://Res2013.github.io/ss/2018/06/24/抽象数据类型/</id>
    <published>2018-06-24T11:17:00.000Z</published>
    <updated>2018-06-24T11:56:57.137Z</updated>
    
    <content type="html">&lt;h2 id=&quot;类型&quot;&gt;&lt;a href=&quot;#类型&quot; class=&quot;headerlink&quot; title=&quot;类型&quot;&gt;&lt;/a&gt;类型&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;在编程的时候，我们应该根据所要解决的问题来设计合适的数据类型。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;类型具有两中信息：属性和操作。如：&lt;code&gt;int&lt;/code&gt;类型的属性代表的是一个整数值，因此它们共享整数的属性，同时允许对&lt;code&gt;int&lt;/code&gt;进行加、减、乘、除等操作，也仅能进行上述操作。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;int&lt;/code&gt;类型是一个非常抽象的整数概念，数学家已经用正式的抽象方式定义了整数的属性，而要实现这一抽象概念需要依赖于具体的语言。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;建立抽象&quot;&gt;&lt;a href=&quot;#建立抽象&quot; class=&quot;headerlink&quot; title=&quot;建立抽象&quot;&gt;&lt;/a&gt;建立抽象&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;假设现在需要解决一个问题，首先需要了解该问题的解决思路，然后根据需要抽象出该类型的属性以及相关操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;建立接口&quot;&gt;&lt;a href=&quot;#建立接口&quot; class=&quot;headerlink&quot; title=&quot;建立接口&quot;&gt;&lt;/a&gt;建立接口&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;根据具体的编程语言来描述抽象出的属性及其相关操作，接口设计尽量与抽象出的属性和操作描述一致，即是需要提供类中属性和操作的原型。这些作用于设计出的类型的函数相当于&lt;code&gt;int&lt;/code&gt;类型的内置运算符。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;使用接口&quot;&gt;&lt;a href=&quot;#使用接口&quot; class=&quot;headerlink&quot; title=&quot;使用接口&quot;&gt;&lt;/a&gt;使用接口&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;根据建立的接口来编写程序，对于具体的实现细节是无感知的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;实现接口&quot;&gt;&lt;a href=&quot;#实现接口&quot; class=&quot;headerlink&quot; title=&quot;实现接口&quot;&gt;&lt;/a&gt;实现接口&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;使用具体的编程语言来编写代码实现接口&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;类型&quot;&gt;&lt;a href=&quot;#类型&quot; class=&quot;headerlink&quot; title=&quot;类型&quot;&gt;&lt;/a&gt;类型&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;在编程的时候，我们应该根据所要解决的问题来设计合适的数据类型。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;类型具有两中信息：属性和操作。如：&lt;code&gt;int&lt;/code&gt;类型的属性代表的是一个整数值，因此它们共享整数的属性，同时允许对&lt;code&gt;int&lt;/code&gt;进行加、减、乘、除等操作，也仅能进行上述操作。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;int&lt;/code&gt;类型是一个非常抽象的整数概念，数学家已经用正式的抽象方式定义了整数的属性，而要实现这一抽象概念需要依赖于具体的语言。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="编程思想" scheme="http://Res2013.github.io/ss/categories/%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/"/>
    
    
      <category term="抽象类型" scheme="http://Res2013.github.io/ss/tags/%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="http://Res2013.github.io/ss/2018/06/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://Res2013.github.io/ss/2018/06/11/设计模式/</id>
    <published>2018-06-11T03:30:00.000Z</published>
    <updated>2018-06-24T09:02:30.855Z</updated>
    
    <content type="html">&lt;h2 id=&quot;单一职责原则&quot;&gt;&lt;a href=&quot;#单一职责原则&quot; class=&quot;headerlink&quot; title=&quot;单一职责原则&quot;&gt;&lt;/a&gt;单一职责原则&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;一个类中应该是一组相关性比较高的函数和数据的封装&lt;/strong&gt;。单一职责的&lt;strong&gt;划分界限&lt;/strong&gt;并不总是那么清晰，很多时候需要靠个人经验来界定。最大的问题就是对职责的定义，什么是类的职责，什么是函数的职责，以及怎么划分类、函数的职责。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;作用：让各个&lt;strong&gt;功能独立&lt;/strong&gt;出来，&lt;strong&gt;职责更清晰&lt;/strong&gt;。同时也降低了类的&lt;strong&gt;耦合性&lt;/strong&gt;，防止&lt;strong&gt;代码臃肿&lt;/strong&gt;，&lt;strong&gt;鲁棒性&lt;/strong&gt;更高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;开闭原则&quot;&gt;&lt;a href=&quot;#开闭原则&quot; class=&quot;headerlink&quot; title=&quot;开闭原则&quot;&gt;&lt;/a&gt;开闭原则&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;软件中的类、模块、函数等应该对于扩展是开放的，对于修改是封闭的&lt;/strong&gt;。对于修改关闭是为了防止升级和维护等原因需要对源码进行修改时，将错误引入了已经经过测试的旧代码中，破坏原有系统。同时对于扩展开放，可以让用户自定义接口实现想要的功能。开闭原则的重要手段是通过&lt;strong&gt;抽象类或接口&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;作用：建立了一个&lt;strong&gt;稳定的、灵活的、可扩展性强的&lt;/strong&gt;系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;里氏替换原则&quot;&gt;&lt;a href=&quot;#里氏替换原则&quot; class=&quot;headerlink&quot; title=&quot;里氏替换原则&quot;&gt;&lt;/a&gt;里氏替换原则&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;所有引用类的地方必须能够透明地使用其子类的对象&lt;/strong&gt;。里氏替换原则的核心是&lt;strong&gt;抽象&lt;/strong&gt;，而抽象又依赖于继承这个特性。继承的缺点如下三个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;侵入性&lt;/strong&gt;：只要继承就必须拥有父类的属性和方法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;强耦合性&lt;/strong&gt;：父类改变，子类就必须改变&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;破坏封装性&lt;/strong&gt;：父类的实现细节对于子类来说是透明的&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;事物总是具有两面性，如何权衡利弊都需要根据具体情况来做出选择并加以处理。里氏替换原则指导通过抽象建立规范，具体的实现在运行时能够动态替换掉抽象，保证了系统的扩展性、灵活性。开闭原则和里氏替换原则往往是生死相依、不离不弃的。这两个原则都强调了一个&lt;code&gt;OOP&lt;/code&gt;的重要特性—-&lt;strong&gt;抽象&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;作用：指导构建&lt;strong&gt;扩展性&lt;/strong&gt;更好的软件系统&lt;/p&gt;
&lt;h2 id=&quot;依赖倒置原则&quot;&gt;&lt;a href=&quot;#依赖倒置原则&quot; class=&quot;headerlink&quot; title=&quot;依赖倒置原则&quot;&gt;&lt;/a&gt;依赖倒置原则&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;依赖倒置原则指定了一种特定的解耦形式，使得高层次的模块不依赖于低层次的模块的实现细节，依赖方式被颠倒了&lt;/strong&gt;。具体形式有以下几个关键点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;高层模块不应该依赖于低层模块，两者都应该依赖其抽象&lt;/li&gt;
&lt;li&gt;抽象不应该依赖细节&lt;/li&gt;
&lt;li&gt;细节应该依赖抽象&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;在Java语言中，抽象就是指接口或抽象类，两者都不能直接被实例化&lt;/strong&gt;。细节就是实现类、接口或继承抽象类而产生的类，可以直接被实例化。那么在Java语言中的表现是：&lt;strong&gt;模块间的依赖通过抽象发生，实现类之间不发生直接的依赖关系，其依赖关系是通过接口或抽象类产生的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;作用：&lt;strong&gt;依赖抽象&lt;/strong&gt;而不依赖具体实现，让系统更加&lt;strong&gt;灵活&lt;/strong&gt;，拥抱变化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;接口隔离原则&quot;&gt;&lt;a href=&quot;#接口隔离原则&quot; class=&quot;headerlink&quot; title=&quot;接口隔离原则&quot;&gt;&lt;/a&gt;接口隔离原则&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;类间的依赖关系应该建立在最小的接口上&lt;/strong&gt;。接口隔离原则将非常庞大、臃肿的接口拆分成更小的和更具体的接口，用户只需要知道他们感兴趣的方法。说白了，接口隔离原则就是将庞大的接口拆分到更细粒度的接口中，让依赖的接口尽可能的小。示例代码如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CloseUtils&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Closeable closeable)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; != closeable) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 closeable.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;作用：&lt;strong&gt;降低耦合性、提高灵活性&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;迪米特原则&quot;&gt;&lt;a href=&quot;#迪米特原则&quot; class=&quot;headerlink&quot; title=&quot;迪米特原则&quot;&gt;&lt;/a&gt;迪米特原则&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;一个对象应该对其它对象有最少的了解&lt;/strong&gt;。迪米特法则有个英文解释是”Only talk to your immedate friends”，翻译过来就是”只与直接的朋友通信”。每个对象必然会与其它对象有耦合关系，耦合了之后就是朋友关系，如依赖、关联、组合、聚合等。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;用户只和直接朋友(一般是&lt;strong&gt;接口或抽象类&lt;/strong&gt;)通信，对于实现的细节是&lt;strong&gt;无感知&lt;/strong&gt;的&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;作用：使得系统具有&lt;strong&gt;更低的耦合性和更好的扩展性&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;单一职责原则&quot;&gt;&lt;a href=&quot;#单一职责原则&quot; class=&quot;headerlink&quot; title=&quot;单一职责原则&quot;&gt;&lt;/a&gt;单一职责原则&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;一个类中应该是一组相关性比较高的函数和数据的封装&lt;/strong&gt;。单一职责的&lt;strong&gt;划分界限&lt;/strong&gt;并不总是那么清晰，很多时候需要靠个人经验来界定。最大的问题就是对职责的定义，什么是类的职责，什么是函数的职责，以及怎么划分类、函数的职责。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;作用：让各个&lt;strong&gt;功能独立&lt;/strong&gt;出来，&lt;strong&gt;职责更清晰&lt;/strong&gt;。同时也降低了类的&lt;strong&gt;耦合性&lt;/strong&gt;，防止&lt;strong&gt;代码臃肿&lt;/strong&gt;，&lt;strong&gt;鲁棒性&lt;/strong&gt;更高。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="设计模式" scheme="http://Res2013.github.io/ss/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://Res2013.github.io/ss/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>位操作</title>
    <link href="http://Res2013.github.io/ss/2018/06/09/C++/%E4%BD%8D%E6%93%8D%E4%BD%9C/"/>
    <id>http://Res2013.github.io/ss/2018/06/09/C++/位操作/</id>
    <published>2018-06-09T11:11:00.000Z</published>
    <updated>2018-06-24T08:57:13.546Z</updated>
    
    <content type="html">&lt;h2 id=&quot;异或&quot;&gt;&lt;a href=&quot;#异或&quot; class=&quot;headerlink&quot; title=&quot;异或&quot;&gt;&lt;/a&gt;异或&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;巧用：不借助第三变量交换两变量的值&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// test.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void swap(int &amp;amp;a,int &amp;amp;b)// 别名a，b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a=a^b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b=b^a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a=a^b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;根据运算规则可推理：假设x = a ^ b，接着y = b ^ x = b ^ (a ^ b) = b ^ b ^ a = a；同理：a = x ^ y = (a^b) ^ a = a ^ a ^ b = b&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;掩码&quot;&gt;&lt;a href=&quot;#掩码&quot; class=&quot;headerlink&quot; title=&quot;掩码&quot;&gt;&lt;/a&gt;掩码&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;按位于运算符常用于&lt;strong&gt;掩码(mask)&lt;/strong&gt;，&lt;code&gt;MASK&lt;/code&gt;中的&lt;strong&gt;0&lt;/strong&gt;隐藏了&lt;code&gt;flags&lt;/code&gt;中相应的位。下面示例中的&lt;strong&gt;掩码宽度&lt;/strong&gt;为&lt;strong&gt;2&lt;/strong&gt;：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 伪代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flags = 10010110;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MASK = 00000010;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flags &amp;amp;= MASK;// 结果为：00000010&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;打开位-设置位&quot;&gt;&lt;a href=&quot;#打开位-设置位&quot; class=&quot;headerlink&quot; title=&quot;打开位(设置位)&quot;&gt;&lt;/a&gt;打开位(设置位)&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;需要打开一个值中的特定位，同时保持其它位不变&lt;/strong&gt;。&lt;code&gt;MASK&lt;/code&gt;中为&lt;code&gt;1&lt;/code&gt;的位全被打开。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 伪代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flags = 00001111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MASK = 10110110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flags |= MASK// 结果为：10111111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;关闭位-清空位&quot;&gt;&lt;a href=&quot;#关闭位-清空位&quot; class=&quot;headerlink&quot; title=&quot;关闭位(清空位)&quot;&gt;&lt;/a&gt;关闭位(清空位)&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;需要在不影响其它位的前提下，关闭指定的位&lt;/strong&gt;。&lt;code&gt;MASK&lt;/code&gt;中为&lt;code&gt;1&lt;/code&gt;的位全被关闭。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 伪代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flags = 00001111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MASK = 10110110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flags = flags &amp;amp; ~MASK;// 结果为：00001001&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;切换位&quot;&gt;&lt;a href=&quot;#切换位&quot; class=&quot;headerlink&quot; title=&quot;切换位&quot;&gt;&lt;/a&gt;切换位&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;打开已关闭的位&lt;/strong&gt;或&lt;strong&gt;关闭已打开的位&lt;/strong&gt;。打开或关闭&lt;code&gt;MASK&lt;/code&gt;中为&lt;code&gt;1&lt;/code&gt;的位。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 伪代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flags = 00001111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MASK = 10110110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flags ^= MASK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;检查位的值&quot;&gt;&lt;a href=&quot;#检查位的值&quot; class=&quot;headerlink&quot; title=&quot;检查位的值&quot;&gt;&lt;/a&gt;检查位的值&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;需要检查某位的值是否被设置为1&lt;/strong&gt;。利用&lt;code&gt;MASK&lt;/code&gt;中为&lt;code&gt;0&lt;/code&gt;的覆盖其它位，只有1位比较。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;flags = 00101111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MASK = 00100000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ((flags &amp;amp; MASK) == MASK) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // TODO:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;赋值高、低字节&quot;&gt;&lt;a href=&quot;#赋值高、低字节&quot; class=&quot;headerlink&quot; title=&quot;赋值高、低字节&quot;&gt;&lt;/a&gt;赋值高、低字节&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#define BYTE_MASK 0xff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unsigned long color = 0x002a162f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unsigned char red, blue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;red = color &amp;amp; BYTE_MASK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;blue = (color &amp;gt;&amp;gt; 8) &amp;amp; BYTE_MASK;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;对齐特性-C11&quot;&gt;&lt;a href=&quot;#对齐特性-C11&quot; class=&quot;headerlink&quot; title=&quot;对齐特性(C11)&quot;&gt;&lt;/a&gt;对齐特性(C11)&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;对象在内存中存储位置的对齐。&lt;code&gt;_Alignof&lt;/code&gt;运算符获取一个类型的对齐值，&lt;code&gt;_Alignas&lt;/code&gt;说明符指定一个变量或类型的对齐值。如下所示：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;size_t f_align = _Alignof(float);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_Alignas(double) char c1;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;在程序中包含&lt;code&gt;stdalign.h&lt;/code&gt;头文件，可以吧&lt;code&gt;alignas&lt;/code&gt;和&lt;code&gt;alignof&lt;/code&gt;分别作为&lt;code&gt;_Alignof&lt;/code&gt;和&lt;code&gt;_Alignas&lt;/code&gt;的别名，这样做可以与&lt;code&gt;C++&lt;/code&gt;关键字匹配。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;异或&quot;&gt;&lt;a href=&quot;#异或&quot; class=&quot;headerlink&quot; title=&quot;异或&quot;&gt;&lt;/a&gt;异或&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;巧用：不借助第三变量交换两变量的值&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// test.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void swap(int &amp;amp;a,int &amp;amp;b)// 别名a，b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a=a^b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b=b^a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a=a^b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;根据运算规则可推理：假设x = a ^ b，接着y = b ^ x = b ^ (a ^ b) = b ^ b ^ a = a；同理：a = x ^ y = (a^b) ^ a = a ^ a ^ b = b&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;掩码&quot;&gt;&lt;a href=&quot;#掩码&quot; class=&quot;headerlink&quot; title=&quot;掩码&quot;&gt;&lt;/a&gt;掩码&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;按位于运算符常用于&lt;strong&gt;掩码(mask)&lt;/strong&gt;，&lt;code&gt;MASK&lt;/code&gt;中的&lt;strong&gt;0&lt;/strong&gt;隐藏了&lt;code&gt;flags&lt;/code&gt;中相应的位。下面示例中的&lt;strong&gt;掩码宽度&lt;/strong&gt;为&lt;strong&gt;2&lt;/strong&gt;：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 伪代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flags = 10010110;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MASK = 00000010;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flags &amp;amp;= MASK;// 结果为：00000010&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;打开位-设置位&quot;&gt;&lt;a href=&quot;#打开位-设置位&quot; class=&quot;headerlink&quot; title=&quot;打开位(设置位)&quot;&gt;&lt;/a&gt;打开位(设置位)&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;strong&gt;需要打开一个值中的特定位，同时保持其它位不变&lt;/strong&gt;。&lt;code&gt;MASK&lt;/code&gt;中为&lt;code&gt;1&lt;/code&gt;的位全被打开。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="位运算" scheme="http://Res2013.github.io/ss/categories/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
    
      <category term="位运算" scheme="http://Res2013.github.io/ss/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>Proxy&amp;Hook</title>
    <link href="http://Res2013.github.io/ss/2018/06/08/Java%E5%9F%BA%E7%A1%80/Proxy&Hook/"/>
    <id>http://Res2013.github.io/ss/2018/06/08/Java基础/Proxy&Hook/</id>
    <published>2018-06-08T14:43:00.000Z</published>
    <updated>2018-06-24T09:06:49.776Z</updated>
    
    <content type="html">&lt;h2 id=&quot;代理&quot;&gt;&lt;a href=&quot;#代理&quot; class=&quot;headerlink&quot; title=&quot;代理&quot;&gt;&lt;/a&gt;代理&lt;/h2&gt;&lt;h3 id=&quot;静态代理&quot;&gt;&lt;a href=&quot;#静态代理&quot; class=&quot;headerlink&quot; title=&quot;静态代理&quot;&gt;&lt;/a&gt;静态代理&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;使用组合模式(&lt;strong&gt;has&lt;/strong&gt;关系)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;动态代理&quot;&gt;&lt;a href=&quot;#动态代理&quot; class=&quot;headerlink&quot; title=&quot;动态代理&quot;&gt;&lt;/a&gt;动态代理&lt;/h3&gt;&lt;h4 id=&quot;接口动态代理&quot;&gt;&lt;a href=&quot;#接口动态代理&quot; class=&quot;headerlink&quot; title=&quot;接口动态代理&quot;&gt;&lt;/a&gt;接口动态代理&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;使用Proxy类和InvocationHandler接口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;类动态代理&quot;&gt;&lt;a href=&quot;#类动态代理&quot; class=&quot;headerlink&quot; title=&quot;类动态代理&quot;&gt;&lt;/a&gt;类动态代理&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;使用cglib库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;输出Proxy类&quot;&gt;&lt;a href=&quot;#输出Proxy类&quot; class=&quot;headerlink&quot; title=&quot;输出Proxy类&quot;&gt;&lt;/a&gt;输出Proxy类&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;Java中可以通过-D参数定义JVM系统参数，然后在代码中通过System.getProperty()获取系统参数。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// JVM生成Proxy字节码文件，保存路径为：com/sun/proxy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.getProperties().put(&lt;span class=&quot;string&quot;&gt;&quot;sun.misc.ProxyGenerator.saveGeneratedFiles&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--more--&gt;
&lt;h2 id=&quot;查看代理类实现&quot;&gt;&lt;a href=&quot;#查看代理类实现&quot; class=&quot;headerlink&quot; title=&quot;查看代理类实现&quot;&gt;&lt;/a&gt;查看代理类实现&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jad.exe -sjava com/sun/proxy/$Proxy0.class&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;jd-gui或idea插件也都可以查看，即可知道代理对象的代理是InvocationHandler实现类对象，而该对象的代理又是实际真正执行方法的对象。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;核心代码如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; $&lt;span class=&quot;title&quot;&gt;Proxy0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Proxy&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IProxyInterface&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Method m1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Method m3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Method m2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Method m0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String var1)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt;  &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// h: InvocationHandler, m3: sayHelloMethod, var1: nameStr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.h.invoke(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, m3, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Object[]&amp;#123;var1&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RuntimeException | Error var3) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; var3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Throwable var4) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; UndeclaredThrowableException(var4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            m1 = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;java.lang.Object&quot;&lt;/span&gt;).getMethod(&lt;span class=&quot;string&quot;&gt;&quot;equals&quot;&lt;/span&gt;, Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;java.lang.Object&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            m3 = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;herry.proxy.IProxyInterface&quot;&lt;/span&gt;).getMethod(&lt;span class=&quot;string&quot;&gt;&quot;sayHello&quot;&lt;/span&gt;, Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;java.lang.String&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            m2 = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;java.lang.Object&quot;&lt;/span&gt;).getMethod(&lt;span class=&quot;string&quot;&gt;&quot;toString&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            m0 = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;java.lang.Object&quot;&lt;/span&gt;).getMethod(&lt;span class=&quot;string&quot;&gt;&quot;hashCode&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (NoSuchMethodException var2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NoSuchMethodError(var2.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (ClassNotFoundException var3) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NoClassDefFoundError(var3.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Proxy&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;java&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;io&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Serializable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; InvocationHandler h;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;代理作用&quot;&gt;&lt;a href=&quot;#代理作用&quot; class=&quot;headerlink&quot; title=&quot;代理作用&quot;&gt;&lt;/a&gt;代理作用&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;代理机制进行API Hook进而达到方法增强(也可以方法拦截)是框架的常用手段，比如J2EE框架Spring通过动态代理优雅地实现了AOP编程，极大地提升了Web开发效率；Android网络框架Retrofit通过动态代理提升了网络请求的开发效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Hook&quot;&gt;&lt;a href=&quot;#Hook&quot; class=&quot;headerlink&quot; title=&quot;Hook&quot;&gt;&lt;/a&gt;Hook&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;代理可以实现方法增强，比如常用的日志、方法耗时、缓存等。通过代理方法修改原方法的参数和返回值，就是代理Hook。&lt;/p&gt;
&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;被Hook的对象叫做&lt;strong&gt;Hook点&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;易Hook的对象&quot;&gt;&lt;a href=&quot;#易Hook的对象&quot; class=&quot;headerlink&quot; title=&quot;易Hook的对象&quot;&gt;&lt;/a&gt;易Hook的对象&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;易找到、不易改变的对象好Hook，尤其是&lt;strong&gt;静态变量和单例&lt;/strong&gt;。在一个进程中，静态变量和单例变量是相对不容易发生变化的，因此非常容易定位，而普通对象容易改变。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;寻找合适的Hook点&quot;&gt;&lt;a href=&quot;#寻找合适的Hook点&quot; class=&quot;headerlink&quot; title=&quot;寻找合适的Hook点&quot;&gt;&lt;/a&gt;寻找合适的Hook点&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;分析&lt;code&gt;startActivity&lt;/code&gt;方法的调用链，找出合适的Hook点。如下所示：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ContextImpl.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;startActivity&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Intent intent, Bundle options)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    warnIfCallingFromSystemProcess();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((intent.getFlags()&amp;amp;Intent.FLAG_ACTIVITY_NEW_TASK) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AndroidRuntimeException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;Calling startActivity() from outside of an Activity &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                + &lt;span class=&quot;string&quot;&gt;&quot; context requires the FLAG_ACTIVITY_NEW_TASK flag.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                + &lt;span class=&quot;string&quot;&gt;&quot; Is this really what you want?&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMainThread.getInstrumentation().execStartActivity(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        getOuterContext(), mMainThread.getApplicationThread(), &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (Activity)&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, intent, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, options);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;很明显&lt;code&gt;Activity&lt;/code&gt;是&lt;code&gt;ActivityThread&lt;/code&gt;的&lt;code&gt;mInstrumentation&lt;/code&gt;成员执行&lt;code&gt;execStartActivity()&lt;/code&gt;启动的，&lt;code&gt;ActivityThread&lt;/code&gt;是主线程，而主线程仅有一个，&lt;br&gt;这里是个良好的&lt;code&gt;Hook&lt;/code&gt;点。接下来把主线程里的&lt;code&gt;mInstrumentation&lt;/code&gt;对象替换成我们修改过的代理对象。&lt;code&gt;ActivityThread&lt;/code&gt;类里有个隐藏的静态方法&lt;code&gt;currentActivityThread&lt;/code&gt;可以获得主线程引用，刚好可以使用反射很简单地获取到。如下所示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Class&amp;lt;?&amp;gt; activityThreadClass = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;android.app.ActivityThread&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Method currentActivityThreadMethod = activityThreadClass.getDeclaredMethod(&lt;span class=&quot;string&quot;&gt;&quot;currentActivityThread&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 取消Java语言的安全检查，可以提升反射的速度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;currentActivityThreadMethod.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Object currentActivityThread = currentActivityThreadMethod.invoke(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;1. 寻找Hook点，原则是静态变量或单例对象，且尽量Hook public修饰的对象和方法，public保证版本的兼容性，一般不需要适配。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;2. 选择合理的代理方式，如果是接口使用动态代理，如果是类可以利用多态并使用静态代理，也可以使用cglib库。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;3. 偷梁换柱—-使用反射将原始对象替换成代理对象。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;代理&quot;&gt;&lt;a href=&quot;#代理&quot; class=&quot;headerlink&quot; title=&quot;代理&quot;&gt;&lt;/a&gt;代理&lt;/h2&gt;&lt;h3 id=&quot;静态代理&quot;&gt;&lt;a href=&quot;#静态代理&quot; class=&quot;headerlink&quot; title=&quot;静态代理&quot;&gt;&lt;/a&gt;静态代理&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;使用组合模式(&lt;strong&gt;has&lt;/strong&gt;关系)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;动态代理&quot;&gt;&lt;a href=&quot;#动态代理&quot; class=&quot;headerlink&quot; title=&quot;动态代理&quot;&gt;&lt;/a&gt;动态代理&lt;/h3&gt;&lt;h4 id=&quot;接口动态代理&quot;&gt;&lt;a href=&quot;#接口动态代理&quot; class=&quot;headerlink&quot; title=&quot;接口动态代理&quot;&gt;&lt;/a&gt;接口动态代理&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;使用Proxy类和InvocationHandler接口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;类动态代理&quot;&gt;&lt;a href=&quot;#类动态代理&quot; class=&quot;headerlink&quot; title=&quot;类动态代理&quot;&gt;&lt;/a&gt;类动态代理&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;使用cglib库&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java基础" scheme="http://Res2013.github.io/ss/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Proxy&Hook" scheme="http://Res2013.github.io/ss/tags/Proxy-Hook/"/>
    
  </entry>
  
  <entry>
    <title>C结构体对齐规则</title>
    <link href="http://Res2013.github.io/ss/2018/06/08/C++/C%E7%BB%93%E6%9E%84%E4%BD%93%E5%AF%B9%E9%BD%90%E8%A7%84%E5%88%99/"/>
    <id>http://Res2013.github.io/ss/2018/06/08/C++/C结构体对齐规则/</id>
    <published>2018-06-08T14:43:00.000Z</published>
    <updated>2018-06-24T08:10:42.962Z</updated>
    
    <content type="html">&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;1. &lt;strong&gt;offsetof&lt;/strong&gt;，用于求结构体中一个成员在该结构体中的偏移量&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;2. &lt;strong&gt;alignof&lt;/strong&gt;，用于求一个类型的对齐值&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;3. &lt;strong&gt;sizeof&lt;/strong&gt;，用于求一个变量或类型的大小&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;4. 对于&lt;strong&gt;所有基本类型&lt;/strong&gt;，&lt;strong&gt;alignof(T) == sizeof(T)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;结构体对齐规则&quot;&gt;&lt;a href=&quot;#结构体对齐规则&quot; class=&quot;headerlink&quot; title=&quot;结构体对齐规则&quot;&gt;&lt;/a&gt;结构体对齐规则&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;1. 结构体变量中&lt;strong&gt;成员的偏移量&lt;/strong&gt;必须是该&lt;strong&gt;成员类型对齐值&lt;/strong&gt;的&lt;strong&gt;整数倍&lt;/strong&gt;。否则，它与前一个成员变量之间要&lt;strong&gt;填充(padding)&lt;/strong&gt;一些无意义的字节来满足&lt;br&gt;&amp;emsp;&amp;emsp;2. 结构体大小必须是其中&lt;strong&gt;所有成员类型&lt;/strong&gt;中&lt;strong&gt;对齐值最大者&lt;/strong&gt;的整数倍。否则，在最后一个成员后面&lt;strong&gt;填充(padding)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;举例说明：&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a;&lt;span class=&quot;comment&quot;&gt;// align : 1, sizeof : 1, offset : 0bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; padding1[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;// 3bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; b;&lt;span class=&quot;comment&quot;&gt;// align : 4, sizeof : 4, offset : 4bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c;&lt;span class=&quot;comment&quot;&gt;// align : 4, sizeof : 4, offset : 8bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; padding2[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;// 4bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; d;&lt;span class=&quot;comment&quot;&gt;// align : 8, sizeof : 8, offset : 16bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; e;&lt;span class=&quot;comment&quot;&gt;// align : 4, sizeof : 4, offset : 24bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; padding3[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;// 4bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; T;&lt;span class=&quot;comment&quot;&gt;// align : 8, sizeof : 32bytes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解释如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;由&lt;strong&gt;第1条规则&lt;/strong&gt;可知：成员&lt;code&gt;a&lt;/code&gt;和&lt;code&gt;b&lt;/code&gt;之间需要&lt;code&gt;padding&lt;/code&gt;3个字节，成员&lt;code&gt;c&lt;/code&gt;和&lt;code&gt;d&lt;/code&gt;之间需要&lt;code&gt;padding&lt;/code&gt;4个字节&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;由&lt;strong&gt;第2条规则&lt;/strong&gt;可知：成员&lt;code&gt;e&lt;/code&gt;后面需要&lt;code&gt;padding&lt;/code&gt;4个字节&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;1. &lt;strong&gt;offsetof&lt;/strong&gt;，用于求结构体中一个成员在该结构体中的偏移量&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;2. &lt;strong&gt;alignof&lt;/strong&gt;，用于求一个类型的对齐值&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;3. &lt;strong&gt;sizeof&lt;/strong&gt;，用于求一个变量或类型的大小&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;4. 对于&lt;strong&gt;所有基本类型&lt;/strong&gt;，&lt;strong&gt;alignof(T) == sizeof(T)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;结构体对齐规则&quot;&gt;&lt;a href=&quot;#结构体对齐规则&quot; class=&quot;headerlink&quot; title=&quot;结构体对齐规则&quot;&gt;&lt;/a&gt;结构体对齐规则&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;1. 结构体变量中&lt;strong&gt;成员的偏移量&lt;/strong&gt;必须是该&lt;strong&gt;成员类型对齐值&lt;/strong&gt;的&lt;strong&gt;整数倍&lt;/strong&gt;。否则，它与前一个成员变量之间要&lt;strong&gt;填充(padding)&lt;/strong&gt;一些无意义的字节来满足&lt;br&gt;&amp;emsp;&amp;emsp;2. 结构体大小必须是其中&lt;strong&gt;所有成员类型&lt;/strong&gt;中&lt;strong&gt;对齐值最大者&lt;/strong&gt;的整数倍。否则，在最后一个成员后面&lt;strong&gt;填充(padding)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="C++" scheme="http://Res2013.github.io/ss/categories/C/"/>
    
    
      <category term="结构体对齐" scheme="http://Res2013.github.io/ss/tags/%E7%BB%93%E6%9E%84%E4%BD%93%E5%AF%B9%E9%BD%90/"/>
    
      <category term="C++" scheme="http://Res2013.github.io/ss/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>偏移地址</title>
    <link href="http://Res2013.github.io/ss/2018/06/08/Java%E5%9F%BA%E7%A1%80/%E5%81%8F%E7%A7%BB%E5%9C%B0%E5%9D%80/"/>
    <id>http://Res2013.github.io/ss/2018/06/08/Java基础/偏移地址/</id>
    <published>2018-06-08T03:13:00.000Z</published>
    <updated>2018-06-24T09:05:40.082Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;JDK提供了&lt;code&gt;sun.misc.Unsafe&lt;/code&gt;计算字段的偏移地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;反射获取Unsafe对象&quot;&gt;&lt;a href=&quot;#反射获取Unsafe对象&quot; class=&quot;headerlink&quot; title=&quot;反射获取Unsafe对象&quot;&gt;&lt;/a&gt;反射获取Unsafe对象&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UnsafeUtils&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Unsafe &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Field unsafeField = Unsafe.class.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;theUnsafe&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unsafeField.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (Unsafe) unsafeField.get(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;// or Unsafe.class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取偏移地址&quot;&gt;&lt;a href=&quot;#获取偏移地址&quot; class=&quot;headerlink&quot; title=&quot;获取偏移地址&quot;&gt;&lt;/a&gt;获取偏移地址&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// VO.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;VO&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;19l&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// OffsetTest.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OffsetTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Unsafe unsafe = UnsafeUtils.getInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; aFieldOffset = unsafe.staticFieldOffset(VO.class.getField(&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; bFieldOffset = unsafe.objectFieldOffset(VO.class.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;aFieldOffset is: &quot;&lt;/span&gt; + aFieldOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;bFieldOffset is: &quot;&lt;/span&gt; + bFieldOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            VO vo = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; VO();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; bFieldValue = unsafe.getLong(vo, bFieldOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;bFieldValue is: &quot;&lt;/span&gt; + bFieldValue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;JDK提供了&lt;code&gt;sun.misc.Unsafe&lt;/code&gt;计算字段的偏移地址&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="偏移地址" scheme="http://Res2013.github.io/ss/categories/%E5%81%8F%E7%A7%BB%E5%9C%B0%E5%9D%80/"/>
    
    
      <category term="偏移地址" scheme="http://Res2013.github.io/ss/tags/%E5%81%8F%E7%A7%BB%E5%9C%B0%E5%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>断点调试Gradle插件</title>
    <link href="http://Res2013.github.io/ss/2018/05/25/Gradle%E7%B3%BB%E5%88%97/%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95Gradle%20Plugin/"/>
    <id>http://Res2013.github.io/ss/2018/05/25/Gradle系列/断点调试Gradle Plugin/</id>
    <published>2018-05-25T02:48:00.000Z</published>
    <updated>2018-06-24T09:27:26.041Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Windows系统下使用以下命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SET GRADLE_OPTS=&amp;quot;-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 一直等待，直到attach到调试进程&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew :app:taskName -Dorg.gradle.debug=true --no-daemon&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在Android Studio或Intellij Idea的”Run/Debug Configurations”中添加Remote，host设置为”localhost”，端口号设置为”5005”，然后attach到调试进程上即可。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Windows系统下使用以下命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
    
    </summary>
    
      <category term="Gradle系列" scheme="http://Res2013.github.io/ss/categories/Gradle%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="调试Gradle插件" scheme="http://Res2013.github.io/ss/tags/%E8%B0%83%E8%AF%95Gradle%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>自定义Gradle Plugin</title>
    <link href="http://Res2013.github.io/ss/2018/05/24/Gradle%E7%B3%BB%E5%88%97/%E8%87%AA%E5%AE%9A%E4%B9%89Gradle%20Plugin/"/>
    <id>http://Res2013.github.io/ss/2018/05/24/Gradle系列/自定义Gradle Plugin/</id>
    <published>2018-05-24T12:43:00.000Z</published>
    <updated>2018-06-24T09:25:13.623Z</updated>
    
    <content type="html">&lt;h2 id=&quot;新建独立工程&quot;&gt;&lt;a href=&quot;#新建独立工程&quot; class=&quot;headerlink&quot; title=&quot;新建独立工程&quot;&gt;&lt;/a&gt;新建独立工程&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;通过Intellij新建一个Gradle工程，build.gradle内容如下所示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;buildscript&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mavenLocal()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//classpath &#39;com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//classpath &#39;com.github.dcendents:android-maven-gradle-plugin:1.4.1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;groovy&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;maven&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sourceCompatibility&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mavenLocal()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; gradleApi()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; localGroovy()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.android.tools.build:gradle:2.3.3&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile &lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;junit&#39;&lt;/span&gt;, name: &lt;span class=&quot;string&quot;&gt;&#39;junit&#39;&lt;/span&gt;, version: &lt;span class=&quot;string&quot;&gt;&#39;4.12&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uploadArchives &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt;.mavenDeployer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        snapshotRepository(url: &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.x.xx:18082/nexus/content/repositories/snapshots&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            authentication(userName: &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;, password: &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        repository(url: &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.x.xx:18082/nexus/content/repositories/releases&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            authentication(userName: &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;, password: &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pom.&lt;span class=&quot;keyword&quot;&gt;project&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            version &lt;span class=&quot;string&quot;&gt;&#39;1.0.1-SNAPSHOT&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            artifactId &lt;span class=&quot;string&quot;&gt;&#39;myplugin&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//模块名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            groupId &lt;span class=&quot;string&quot;&gt;&#39;com.example.herry&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//包名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            packaging &lt;span class=&quot;string&quot;&gt;&#39;jar&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;custom plugin test&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//描述&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;*.groovy文件内容如下：&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; practice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; groovy.xml.XmlUtil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.gradle.api.Plugin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.gradle.api.Project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.android.build.gradle.api.ApplicationVariant&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyPlugin&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Plugin&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Project&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Project project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; apply(Project project) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.project = project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!project.plugins.hasPlugin(&lt;span class=&quot;string&quot;&gt;&#39;com.android.application&#39;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.err.println(&lt;span class=&quot;string&quot;&gt;&quot;application required!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        project.afterEvaluate &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            project.android.applicationVariants.each &amp;#123; ApplicationVariant variant -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                String variantName = variant.name.capitalize()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; mergeManifestTask = project.tasks.getByName(&lt;span class=&quot;string&quot;&gt;&quot;process$&amp;#123;variantName&amp;#125;Manifest&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mergeManifestTask.doLast &amp;#123; mm -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; manifest = mm.manifestOutputFile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (project.hasProperty(&lt;span class=&quot;string&quot;&gt;&quot;channel&quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        addChannel(manifest)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; addChannel(File manifest) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; xml = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XmlParser().parse(manifest)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; channelNum = project.property(&lt;span class=&quot;string&quot;&gt;&quot;channel&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xml.application[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].appendNode(&lt;span class=&quot;string&quot;&gt;&quot;meta-data&quot;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;android:name&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;channel&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;android:value&#39;&lt;/span&gt;: channelNum])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        manifest.withPrintWriter(&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            XmlUtil.serialize(xml, it)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;插件类配置图如下所示：&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/2220473-b2161bc19065ac39.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;插件类配置&quot;&gt;&lt;br&gt;&lt;code&gt;myplugin.properties&lt;/code&gt;文件的名字就是需要使用该插件的时候使用的字符串，如：&lt;code&gt;apply plugin: &amp;#39;myplugin&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过gradlew uploadArchives上传到Nexus服务器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Android工程引用&quot;&gt;&lt;a href=&quot;#Android工程引用&quot; class=&quot;headerlink&quot; title=&quot;Android工程引用&quot;&gt;&lt;/a&gt;Android工程引用&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Android工程root目录下build.gradle代码如下所示：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;buildscript &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    repositories &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maven &amp;#123; url &amp;apos;http://192.168.1.32:18082/nexus/content/repositories/snapshots&amp;apos; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maven &amp;#123; url &amp;apos;http://192.168.1.32:18082/nexus/content/repositories/releases&amp;apos; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classpath &amp;apos;com.android.tools.build:gradle:2.3.3&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classpath &amp;apos;com.example.herry:myplugin:1.0.1-SNAPSHOT&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Moudle下的build.gradle直接这样使用即可，如下所示：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &amp;apos;myplugin&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意：刷新&lt;code&gt;SNAPSHOT&lt;/code&gt;快照版缓存需要用到以下代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;configurations.all &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolutionStrategy.cacheChangingModulesFor  0,&amp;apos;seconds&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新建独立工程&quot;&gt;&lt;a href=&quot;#新建独立工程&quot; class=&quot;headerlink&quot; title=&quot;新建独立工程&quot;&gt;&lt;/a&gt;新建独立工程&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;通过Intellij新建一个Gradle工程，build.gradle内容如下所示：&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Gradle系列" scheme="http://Res2013.github.io/ss/categories/Gradle%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="Gradle Plugin" scheme="http://Res2013.github.io/ss/tags/Gradle-Plugin/"/>
    
  </entry>
  
  <entry>
    <title>单独工程自定义Task</title>
    <link href="http://Res2013.github.io/ss/2018/05/24/Gradle%E7%B3%BB%E5%88%97/%E5%8D%95%E7%8B%AC%E5%B7%A5%E7%A8%8B%E8%87%AA%E5%AE%9A%E4%B9%89Task/"/>
    <id>http://Res2013.github.io/ss/2018/05/24/Gradle系列/单独工程自定义Task/</id>
    <published>2018-05-24T11:33:00.000Z</published>
    <updated>2018-06-24T09:21:18.750Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Intellij新建独立工程&quot;&gt;&lt;a href=&quot;#Intellij新建独立工程&quot; class=&quot;headerlink&quot; title=&quot;Intellij新建独立工程&quot;&gt;&lt;/a&gt;Intellij新建独立工程&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;通过Intellij新建一个Gradle工程，build.gradle内容如下所示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;groovy&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;maven&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sourceCompatibility&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; gradleApi()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile &lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;junit&#39;&lt;/span&gt;, name: &lt;span class=&quot;string&quot;&gt;&#39;junit&#39;&lt;/span&gt;, version: &lt;span class=&quot;string&quot;&gt;&#39;4.12&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uploadArchives &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt;.mavenDeployer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        snapshotRepository(url: &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.x.xx:18082/nexus/content/repositories/snapshots&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            authentication(userName: &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;, password: &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        repository(url: &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.x.xx:18082/nexus/content/repositories/releases&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            authentication(userName: &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;, password: &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pom.&lt;span class=&quot;keyword&quot;&gt;project&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            version &lt;span class=&quot;string&quot;&gt;&#39;1.0.1-SNAPSHOT&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            artifactId &lt;span class=&quot;string&quot;&gt;&#39;plugintest&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//模块名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            groupId &lt;span class=&quot;string&quot;&gt;&#39;com.example.herry&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//包名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            packaging &lt;span class=&quot;string&quot;&gt;&#39;jar&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;custom task test&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//描述&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;*.groovy文件内容如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package practice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.gradle.api.*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.gradle.api.tasks.*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class HelloTestTask extends DefaultTask &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Optional&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String message = &amp;apos;I\&amp;apos;m herry&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@TaskAction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	def hello() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		println &amp;quot;hello world $message in custom plugin.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过gradlew uploadArchives上传到Nexus服务器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Android工程引用&quot;&gt;&lt;a href=&quot;#Android工程引用&quot; class=&quot;headerlink&quot; title=&quot;Android工程引用&quot;&gt;&lt;/a&gt;Android工程引用&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Android工程root目录下build.gradle代码如下所示：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;buildscript &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    repositories &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maven &amp;#123; url &amp;apos;http://192.168.x.xx:18082/nexus/content/repositories/snapshots&amp;apos; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maven &amp;#123; url &amp;apos;http://192.168.x.xx:18082/nexus/content/repositories/releases&amp;apos; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classpath &amp;apos;com.android.tools.build:gradle:2.3.3&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classpath group: &amp;apos;com.example.herry&amp;apos;, name: &amp;apos;plugintest&amp;apos;, version: &amp;apos;1.0.1-SNAPSHOT&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Moudle下的build.gradle直接这样使用即可，如下所示：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;task hello(type: practice.HelloTestTask)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Intellij新建独立工程&quot;&gt;&lt;a href=&quot;#Intellij新建独立工程&quot; class=&quot;headerlink&quot; title=&quot;Intellij新建独立工程&quot;&gt;&lt;/a&gt;Intellij新建独立工程&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;通过Intellij新建一个Gradle工程，build.gradle内容如下所示：&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Gradle系列" scheme="http://Res2013.github.io/ss/categories/Gradle%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="自定义Task" scheme="http://Res2013.github.io/ss/tags/%E8%87%AA%E5%AE%9A%E4%B9%89Task/"/>
    
  </entry>
  
  <entry>
    <title>OkHttp加解密拦截器</title>
    <link href="http://Res2013.github.io/ss/2018/05/24/Android/OkHttp%E5%8A%A0%E8%A7%A3%E5%AF%86%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>http://Res2013.github.io/ss/2018/05/24/Android/OkHttp加解密拦截器/</id>
    <published>2018-05-24T03:09:00.000Z</published>
    <updated>2018-06-24T08:37:20.510Z</updated>
    
    <content type="html">&lt;h2 id=&quot;拦截器使用&quot;&gt;&lt;a href=&quot;#拦截器使用&quot; class=&quot;headerlink&quot; title=&quot;拦截器使用&quot;&gt;&lt;/a&gt;拦截器使用&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;加、解密写到同一个拦截器里，如下所示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Response &lt;span class=&quot;title&quot;&gt;intercept&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Chain chain)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Request request = chain.request();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String url = request.url().toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String method = request.method();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Log.i(TAG, &lt;span class=&quot;string&quot;&gt;&quot;url为:&quot;&lt;/span&gt; + url + &lt;span class=&quot;string&quot;&gt;&quot;\nmethod为:&quot;&lt;/span&gt; + method);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request = encrypt(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Response response = chain.proceed(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response = decrypt(response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Request &lt;span class=&quot;title&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Request request)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RequestBody requestBody = request.body();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestBody != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        okio.Buffer buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; okio.Buffer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        requestBody.writeTo(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Charset charset = Charset.forName(&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaType contentType = requestBody.contentType();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (contentType != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            charset = contentType.charset(charset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String string = buffer.readString(charset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.i(TAG, &lt;span class=&quot;string&quot;&gt;&quot;请求的原数据为:&quot;&lt;/span&gt; + string);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; encrypt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String encryptStr = encrypt(string);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RequestBody body = MultipartBody.create(contentType, encryptStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Request.Builder builder = request&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .newBuilder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .post(body)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; request;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Response &lt;span class=&quot;title&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Response response)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response.isSuccessful()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//the response data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ResponseBody body = response.body();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BufferedSource source = body.source();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        source.request(Long.MAX_VALUE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Buffer the entire body&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Buffer buffer = source.buffer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Charset charset = Charset.defaultCharset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaType contentType = body.contentType();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (contentType != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            charset = contentType.charset(charset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String decryptStr = buffer.clone().readString(charset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; decrypt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String string = decrypt(decryptStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.i(TAG, &lt;span class=&quot;string&quot;&gt;&quot;响应的数据解密后为:&quot;&lt;/span&gt; + string );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ResponseBody responseBody = ResponseBody.create(contentType, bodyString);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response = response.newBuilder().body(responseBody).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;拦截器使用&quot;&gt;&lt;a href=&quot;#拦截器使用&quot; class=&quot;headerlink&quot; title=&quot;拦截器使用&quot;&gt;&lt;/a&gt;拦截器使用&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;加、解密写到同一个拦截器里，如下所示：&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="OkHttp" scheme="http://Res2013.github.io/ss/categories/OkHttp/"/>
    
    
      <category term="OkHttp" scheme="http://Res2013.github.io/ss/tags/OkHttp/"/>
    
      <category term="拦截器" scheme="http://Res2013.github.io/ss/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>JNI知识点</title>
    <link href="http://Res2013.github.io/ss/2018/04/25/NDK%E5%BC%80%E5%8F%91/JNI%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://Res2013.github.io/ss/2018/04/25/NDK开发/JNI知识点/</id>
    <published>2018-04-25T08:52:00.000Z</published>
    <updated>2018-06-24T08:47:46.370Z</updated>
    
    <content type="html">&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Java JNI原意是Java Native Interface，它是为了方便Java调用C、C++等本地代码所封装的一层接口。&lt;/p&gt;
&lt;p&gt;NDK是Android所提供的一个工具集合，通过NDK可以在Android中更加方便地通过JNI来访问本地代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Native优缺点&quot;&gt;&lt;a href=&quot;#Native优缺点&quot; class=&quot;headerlink&quot; title=&quot;Native优缺点&quot;&gt;&lt;/a&gt;Native优缺点&lt;/h2&gt;&lt;h3 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;由于so库反编译比较困难，因此提高代码的安全性。&lt;/li&gt;
&lt;li&gt;可以方便地使用目前已有的C/C++开源库。&lt;/li&gt;
&lt;li&gt;方便移植到其它平台。&lt;/li&gt;
&lt;li&gt;在Native中创建的资源存在于Native Heap上，需要主动去释放它，对于应用而言没有OOM的问题，并且也不需要考虑GC时锁线程带来的掉帧。如Facebook的Fresco框架就是将图片缓存到Native Heap上。&lt;/li&gt;
&lt;li&gt;在Dalvik虚拟机中，会省去由JIT编译期转为本地代码的步骤&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;在JDK1.6版本时，Java调用JNI的耗时是Java调用Java的5倍。随着JDK版本升级，差距慢慢减小。&lt;/li&gt;
&lt;li&gt;Java与Native通信，需要多出一些系统开销。&lt;/li&gt;
&lt;li&gt;需要对不同的处理器架构进行支持，存在明显的兼容性问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;JNI基本知识&quot;&gt;&lt;a href=&quot;#JNI基本知识&quot; class=&quot;headerlink&quot; title=&quot;JNI基本知识&quot;&gt;&lt;/a&gt;JNI基本知识&lt;/h2&gt;&lt;h3 id=&quot;Java示例&quot;&gt;&lt;a href=&quot;#Java示例&quot; class=&quot;headerlink&quot; title=&quot;Java示例&quot;&gt;&lt;/a&gt;Java示例&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JniTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.loadLibrary(&lt;span class=&quot;string&quot;&gt;&quot;jni-test&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String str)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;JNI头文件&quot;&gt;&lt;a href=&quot;#JNI头文件&quot; class=&quot;headerlink&quot; title=&quot;JNI头文件&quot;&gt;&lt;/a&gt;JNI头文件&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* DO NOT EDIT THIS FILE - it is machine generated */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* Header for class test_androidtest_nativ_JniTest */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifndef&lt;/span&gt; _Included_test_androidtest_nativ_JniTest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; _Included_test_androidtest_nativ_JniTest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Class:     test_androidtest_nativ_JniTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Method:    get&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Signature: ()Ljava/lang/String;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;Java_test_androidtest_nativ_JniTest_get&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jobject)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Class:     test_androidtest_nativ_JniTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Method:    set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Signature: (Ljava/lang/String;)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_test_androidtest_nativ_JniTest_set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jobject, jstring)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;实现JNI方法&quot;&gt;&lt;a href=&quot;#实现JNI方法&quot; class=&quot;headerlink&quot; title=&quot;实现JNI方法&quot;&gt;&lt;/a&gt;实现JNI方法&lt;/h3&gt;&lt;h4 id=&quot;C-实现&quot;&gt;&lt;a href=&quot;#C-实现&quot; class=&quot;headerlink&quot; title=&quot;C++实现&quot;&gt;&lt;/a&gt;C++实现&lt;/h4&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;test_androidtest_nativ_JniTest.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;Java_test_androidtest_nativ_JniTest_get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Invoke the get function in C++!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return env-&amp;gt;NewStringUTF(&lt;span class=&quot;string&quot;&gt;&quot;Hello from JNI!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_test_androidtest_nativ_JniTest_set&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz, jstring &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Invoke the set function in C++!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* str = env-&amp;gt;GetStringUTFChars(string, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s\n&quot;&lt;/span&gt;, str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    env-&amp;gt;ReleaseStringUTFChars(&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;C实现&quot;&gt;&lt;a href=&quot;#C实现&quot; class=&quot;headerlink&quot; title=&quot;C实现&quot;&gt;&lt;/a&gt;C实现&lt;/h4&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;test_androidtest_nativ_JniTest.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;Java_test_androidtest_nativ_JniTest_get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Invoke the get function in C!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (*env)-&amp;gt;NewStringUTF(env, &lt;span class=&quot;string&quot;&gt;&quot;Hello from JNI!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_test_androidtest_nativ_JniTest_set&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz, jstring &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Invoke the set function in C!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* str = (*env)-&amp;gt;GetStringUTFChars(env, string, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s\n&quot;&lt;/span&gt;, str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*env)-&amp;gt;ReleaseStringUTFChars(env, &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;JNI原理&quot;&gt;&lt;a href=&quot;#JNI原理&quot; class=&quot;headerlink&quot; title=&quot;JNI原理&quot;&gt;&lt;/a&gt;JNI原理&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;jni.h&lt;/strong&gt;头文件部分内容如下：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Reference types, in C++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; _jstring*       jstring;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* not __cplusplus */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Reference types, in C.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; jobject         jstring;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* not __cplusplus */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; defined(__cplusplus)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; _JNIEnv JNIEnv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; _JavaVM JavaVM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; JNINativeInterface* JNIEnv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; JNIInvokeInterface* JavaVM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Table of interface function pointers.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; JNINativeInterface &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jstring     (*NewStringUTF)(JNIEnv*, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;*);&lt;span class=&quot;comment&quot;&gt;// 声明特定输入、输出类型的函数指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* JNI spec says this returns const jbyte*, but that&#39;s inconsistent */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* (*GetStringUTFChars)(JNIEnv*, jstring, jboolean*);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;        (*ReleaseStringUTFChars)(JNIEnv*, jstring, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;*);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * C++ object wrapper.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * This is usually overlaid on a C struct whose first element is a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * JNINativeInterface*.  We rely somewhat on compiler behavior.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _JNIEnv &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* do not rename this; it does not seem to be entirely opaque */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; JNINativeInterface* functions;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;jstring &lt;span class=&quot;title&quot;&gt;NewStringUTF&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* bytes)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return functions-&amp;gt;NewStringUTF(this, bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* &lt;span class=&quot;title&quot;&gt;GetStringUTFChars&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(jstring &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, jboolean* isCopy)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return functions-&amp;gt;GetStringUTFChars(this, string, isCopy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ReleaseStringUTFChars&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(jstring &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* utf)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        functions-&amp;gt;ReleaseStringUTFChars(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, utf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;JNI类型签名&quot;&gt;&lt;a href=&quot;#JNI类型签名&quot; class=&quot;headerlink&quot; title=&quot;JNI类型签名&quot;&gt;&lt;/a&gt;JNI类型签名&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;类型签名标识了一个特定的Java类型，这个类型可以是基本数据类型、数组类型、引用对象类型和方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;基本数据类型签名&quot;&gt;&lt;a href=&quot;#基本数据类型签名&quot; class=&quot;headerlink&quot; title=&quot;基本数据类型签名&quot;&gt;&lt;/a&gt;基本数据类型签名&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;基本数据类型签名采用一系列大写字母来表示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Java类型&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;签名&lt;/th&gt;
&lt;th&gt;Java类型&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;签名&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Z&lt;/td&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;J&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;byte&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;short&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;S&lt;/td&gt;
&lt;td&gt;void&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;数组签名&quot;&gt;&lt;a href=&quot;#数组签名&quot; class=&quot;headerlink&quot; title=&quot;数组签名&quot;&gt;&lt;/a&gt;数组签名&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;数组签名为&lt;strong&gt;[+类型签名&lt;/strong&gt;，如&lt;code&gt;String[]&lt;/code&gt;的签名为&lt;code&gt;[Ljava/lang/String;&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;引用对象类型签名&quot;&gt;&lt;a href=&quot;#引用对象类型签名&quot; class=&quot;headerlink&quot; title=&quot;引用对象类型签名&quot;&gt;&lt;/a&gt;引用对象类型签名&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;引用对象类型签名比较简单，它采用”&lt;strong&gt;L+包名+类名+;&lt;/strong&gt;“的形式，比如java.lang.String的签名为Ljava/lang/String;。&lt;/p&gt;
&lt;p&gt;多维数组的签名为&lt;strong&gt;n个[+类型签名&lt;/strong&gt;，其中&lt;code&gt;n&lt;/code&gt;表示数组的维度。比如&lt;code&gt;int[][]&lt;/code&gt;类型的签名为[[I。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;方法签名&quot;&gt;&lt;a href=&quot;#方法签名&quot; class=&quot;headerlink&quot; title=&quot;方法签名&quot;&gt;&lt;/a&gt;方法签名&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;方法签名为&lt;strong&gt;(参数类型签名)+返回值类型签名&lt;/strong&gt;，如&lt;code&gt;boolean func(int a, double b, int[] c)&lt;/code&gt;的签名为&lt;code&gt;(ID[I)Z&lt;/code&gt;；&lt;code&gt;boolean func(int a, String b, int[] c)&lt;/code&gt;类型为&lt;code&gt;(ILjava/lang/String;[I)Z&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;JNI调用Java&quot;&gt;&lt;a href=&quot;#JNI调用Java&quot; class=&quot;headerlink&quot; title=&quot;JNI调用Java&quot;&gt;&lt;/a&gt;JNI调用Java&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;调用流程为：调用&lt;code&gt;Java&lt;/code&gt;中静态方法先通过类名找到类，然后再根据方法名找到方法&lt;code&gt;id&lt;/code&gt;，最后就可以调用这个方法。调用&lt;code&gt;Java&lt;/code&gt;中非静态方法需要构造出类的对下你给后才能调用。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;methodCalledByJni&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String msgFromJni)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Log.e(&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;method called by jni, msg: &quot;&lt;/span&gt; + msgFromJni);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;callJavaMethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 根据类名找到Class对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jclass clazz = env-&amp;gt;FindClass(&lt;span class=&quot;string&quot;&gt;&quot;test/androidtest/MainActivity&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (clazz == NULL) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        printf(&lt;span class=&quot;string&quot;&gt;&quot;find class MainActivity error!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 根据方法名找到方法ID(需要方法签名)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jmethodId id = env-&amp;gt;GetStaticMethodID(clazz, &lt;span class=&quot;string&quot;&gt;&quot;methodCalledByJni&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;(Ljava/lang/String;)V&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (id == NULL) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        printf(&lt;span class=&quot;string&quot;&gt;&quot;find method methodCalledByJni error!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jstring msg = env-&amp;gt;NewStringUTF(&lt;span class=&quot;string&quot;&gt;&quot;msg sended by callJavaMethod in jnitest.cpp.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 通过JNIEnv对象调动静态方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    env-&amp;gt;CallStaticVoidMethod(clazz, id, msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;jstring &lt;span class=&quot;title&quot;&gt;Java_test_androidtest_MainActivity_get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    printf(&lt;span class=&quot;string&quot;&gt;&quot;invoke get in C++!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    callJavaMethod(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; env-&amp;gt;NewStringUTF(&lt;span class=&quot;string&quot;&gt;&quot;Hello from JNI in libjni-test.so!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从Java调用JNI然后再从JNI中调用Java方法完成了一次JNI调用Java方法的过程。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Java JNI原意是Java Native Interface，它是为了方便Java调用C、C++等本地代码所封装的一层接口。&lt;/p&gt;
&lt;p&gt;NDK是Android所提供的一个工具集合，通过NDK可以在Android中更加方便地通过JNI来访问本地代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Native优缺点&quot;&gt;&lt;a href=&quot;#Native优缺点&quot; class=&quot;headerlink&quot; title=&quot;Native优缺点&quot;&gt;&lt;/a&gt;Native优缺点&lt;/h2&gt;&lt;h3 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;由于so库反编译比较困难，因此提高代码的安全性。&lt;/li&gt;
&lt;li&gt;可以方便地使用目前已有的C/C++开源库。&lt;/li&gt;
&lt;li&gt;方便移植到其它平台。&lt;/li&gt;
&lt;li&gt;在Native中创建的资源存在于Native Heap上，需要主动去释放它，对于应用而言没有OOM的问题，并且也不需要考虑GC时锁线程带来的掉帧。如Facebook的Fresco框架就是将图片缓存到Native Heap上。&lt;/li&gt;
&lt;li&gt;在Dalvik虚拟机中，会省去由JIT编译期转为本地代码的步骤&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="NDK开发" scheme="http://Res2013.github.io/ss/categories/NDK%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="JNI" scheme="http://Res2013.github.io/ss/tags/JNI/"/>
    
  </entry>
  
  <entry>
    <title>Gradle基础</title>
    <link href="http://Res2013.github.io/ss/2018/04/12/Gradle%E7%B3%BB%E5%88%97/Gradle%E5%9F%BA%E7%A1%80/"/>
    <id>http://Res2013.github.io/ss/2018/04/12/Gradle系列/Gradle基础/</id>
    <published>2018-04-12T13:26:00.000Z</published>
    <updated>2018-06-24T09:15:48.745Z</updated>
    
    <content type="html">&lt;h2 id=&quot;领域对象&quot;&gt;&lt;a href=&quot;#领域对象&quot; class=&quot;headerlink&quot; title=&quot;领域对象&quot;&gt;&lt;/a&gt;领域对象&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Gradle&lt;/code&gt;只提供构建项目的框架，真正起作用的是&lt;code&gt;Plugin&lt;/code&gt;。&lt;code&gt;Gradle&lt;/code&gt;不仅引入了&lt;code&gt;Task&lt;/code&gt;和&lt;code&gt;Property&lt;/code&gt;还引入了&lt;code&gt;Gradle&lt;/code&gt;项目的构建生命周期，常见的如&lt;code&gt;Java Plugin&lt;/code&gt;和&lt;code&gt;Android Plugin&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Gradle&lt;/code&gt;本身的领域对象主要有&lt;code&gt;Project&lt;/code&gt;和&lt;code&gt;Task&lt;/code&gt;。&lt;code&gt;Project&lt;/code&gt;为&lt;code&gt;Task&lt;/code&gt;提供了执行上下文，所有的&lt;code&gt;Plugin&lt;/code&gt;要么向&lt;code&gt;Project&lt;/code&gt;中添加用于配置的&lt;code&gt;Property&lt;/code&gt;，要么向&lt;code&gt;Project&lt;/code&gt;中添加不同的&lt;code&gt;Task&lt;/code&gt;。一个&lt;code&gt;Task&lt;/code&gt;表示一个逻辑上较为独立的执行过程。&lt;/p&gt;
&lt;p&gt;在没有显示指定调用对象的情况下，&lt;code&gt;Gradle&lt;/code&gt;会自动将调用对象设置成当前&lt;code&gt;Project&lt;/code&gt;。具体使用，请查看文档&lt;code&gt;Project&lt;/code&gt;类的方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;任务-Task&quot;&gt;&lt;a href=&quot;#任务-Task&quot; class=&quot;headerlink&quot; title=&quot;任务(Task)&quot;&gt;&lt;/a&gt;任务(&lt;strong&gt;Task&lt;/strong&gt;)&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;查看任务&quot;&gt;&lt;a href=&quot;#查看任务&quot; class=&quot;headerlink&quot; title=&quot;查看任务&quot;&gt;&lt;/a&gt;查看任务&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gradlew tasks&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;相当于&lt;code&gt;doLast&lt;/code&gt;，&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;相当于&lt;code&gt;doFirst&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;project.task(&amp;apos;showTime&amp;apos;) &amp;#123;// 任务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            doLast &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                println &amp;quot;Current time is &amp;quot; + new Date().format(project.dateAndTime.timeFormat)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;project.tasks.create(&amp;apos;showDate&amp;apos;) &amp;#123;// 任务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            doLast &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                println &amp;quot;Current date is &amp;quot; + new Date().format(project.dateAndTime.dateFormat)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;类型&quot;&gt;&lt;a href=&quot;#类型&quot; class=&quot;headerlink&quot; title=&quot;类型&quot;&gt;&lt;/a&gt;类型&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;默认类型是&lt;code&gt;DefaultTask&lt;/code&gt;，也可以定义一个&lt;code&gt;Task&lt;/code&gt;时的默认类型，如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;task copyFile(type: Copy) &amp;#123;// 相对于当前Project，即build.gralde所在目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    from &amp;apos;src&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    into &amp;apos;dest&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;输入和输出类型&quot;&gt;&lt;a href=&quot;#输入和输出类型&quot; class=&quot;headerlink&quot; title=&quot;输入和输出类型&quot;&gt;&lt;/a&gt;输入和输出类型&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;每个&lt;code&gt;Task&lt;/code&gt;都有&lt;code&gt;inputs&lt;/code&gt;和&lt;code&gt;outputs&lt;/code&gt;属性，他们的类型分别为&lt;code&gt;TaskInputs&lt;/code&gt;和&lt;code&gt;TaskOutputs&lt;/code&gt;。输入和输出可以是文件也可以是文件夹，还可以是&lt;code&gt;Project&lt;/code&gt;的某个&lt;code&gt;Property&lt;/code&gt;或闭包所定义的条件。&lt;/p&gt;
&lt;p&gt;对于&lt;code&gt;outputs&lt;/code&gt;我们可以使用&lt;code&gt;upToDateWhen()&lt;/code&gt;方法来决定一个&lt;code&gt;Task&lt;/code&gt;的&lt;code&gt;outputs&lt;/code&gt;是否为最新的。这也是&lt;code&gt;Gradle&lt;/code&gt;中的增量式构建的机制。&lt;/p&gt;
&lt;p&gt;Task执行时出现&lt;code&gt;UP-TO-DATE&lt;/code&gt;代表它是最新的，不会重新执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;依赖&quot;&gt;&lt;a href=&quot;#依赖&quot; class=&quot;headerlink&quot; title=&quot;依赖&quot;&gt;&lt;/a&gt;依赖&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;执行&lt;code&gt;taskA&lt;/code&gt;时，&lt;code&gt;Gradle&lt;/code&gt;会先执行&lt;code&gt;taskB&lt;/code&gt;，再执行&lt;code&gt;taskA&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;显示指定&lt;code&gt;Module&lt;/code&gt;所有依赖&lt;code&gt;gradlew :app:dependencies&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;task taskA(dependsOn: taskB) &amp;#123;// 1st dep&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   // do sth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;task taskA &amp;lt;&amp;lt; &amp;#123;// 2nd dep&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    println &amp;apos;hello world&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;taskA.dependsOn taskB&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;创建Task&quot;&gt;&lt;a href=&quot;#创建Task&quot; class=&quot;headerlink&quot; title=&quot;创建Task&quot;&gt;&lt;/a&gt;创建Task&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;调用&lt;code&gt;Project&lt;/code&gt;的&lt;code&gt;task()&lt;/code&gt;方法创建&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;TaskContainer&lt;/code&gt;的&lt;code&gt;create()&lt;/code&gt;方法创建&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于每一个&lt;code&gt;Task&lt;/code&gt;，&lt;code&gt;Gradle&lt;/code&gt;都会在&lt;code&gt;Project&lt;/code&gt;中创建一个同名的&lt;code&gt;Property&lt;/code&gt;，我们可以把&lt;code&gt;Task&lt;/code&gt;当做&lt;code&gt;Property&lt;/code&gt;来访问。另外，&lt;code&gt;Gradle&lt;/code&gt;也会创建一个同名的方法。该方法接受一个闭包参数，可以用来配置&lt;code&gt;Task&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;示例：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tasks.create(name: &amp;apos;taskC&amp;apos;) &amp;lt;&amp;lt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    println &amp;apos;Hello world!&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置Task&quot;&gt;&lt;a href=&quot;#配置Task&quot; class=&quot;headerlink&quot; title=&quot;配置Task&quot;&gt;&lt;/a&gt;配置Task&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Task&lt;/code&gt;除了执行操作，还可以包含多个&lt;code&gt;Property&lt;/code&gt;，如默认定义的&lt;code&gt;description&lt;/code&gt;、&lt;code&gt;logger&lt;/code&gt;等。特定的&lt;code&gt;Task&lt;/code&gt;类型还包含特定的&lt;code&gt;Property&lt;/code&gt;，如&lt;code&gt;Copy&lt;/code&gt;类型的&lt;code&gt;from&lt;/code&gt;和&lt;code&gt;to&lt;/code&gt;等。当然也可以动态地向&lt;code&gt;Task&lt;/code&gt;中加入额外的&lt;code&gt;Property&lt;/code&gt;。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;task taskA &amp;lt;&amp;lt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    description = &amp;quot;this is taskA&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    println description&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;task taskB &amp;lt;&amp;lt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    println description&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;taskB &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    description = &amp;quot;this is taskB&amp;quot;// 配置阶段Gradle框架会扫描整个build.gradle然后设置description，执行阶段就可以正常输出了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;task taskC &amp;lt;&amp;lt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    println description&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;taskC.configure &amp;#123;// 通过configure()方法完成配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    description = &amp;quot;this is taskC&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;后续&quot;&gt;&lt;a href=&quot;#后续&quot; class=&quot;headerlink&quot; title=&quot;后续&quot;&gt;&lt;/a&gt;后续&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;所有的&lt;code&gt;Task&lt;/code&gt;都位于&lt;code&gt;Project&lt;/code&gt;的&lt;code&gt;TaskContainer&lt;/code&gt;中，&lt;code&gt;TaskContainer&lt;/code&gt;就是&lt;code&gt;Project&lt;/code&gt;中的&lt;code&gt;tasks&lt;/code&gt;属性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;属性-Property&quot;&gt;&lt;a href=&quot;#属性-Property&quot; class=&quot;headerlink&quot; title=&quot;属性(Property)&quot;&gt;&lt;/a&gt;属性(&lt;strong&gt;Property&lt;/strong&gt;)&lt;/h2&gt;&lt;h3 id=&quot;查看&quot;&gt;&lt;a href=&quot;#查看&quot; class=&quot;headerlink&quot; title=&quot;查看&quot;&gt;&lt;/a&gt;查看&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gradlew properties&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;内置属性&quot;&gt;&lt;a href=&quot;#内置属性&quot; class=&quot;headerlink&quot; title=&quot;内置属性&quot;&gt;&lt;/a&gt;内置属性&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;project&lt;/code&gt;：&lt;code&gt;Project&lt;/code&gt;本身&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;：&lt;code&gt;Project&lt;/code&gt;名字&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;：&lt;code&gt;Project&lt;/code&gt;的绝对路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;description&lt;/code&gt;：&lt;code&gt;Project&lt;/code&gt;的描述信息，&lt;code&gt;Task&lt;/code&gt;的描述信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;buildDir&lt;/code&gt;：&lt;code&gt;Project&lt;/code&gt;构建结果存放目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt;：&lt;code&gt;Project&lt;/code&gt;版本号&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;自定义Property&quot;&gt;&lt;a href=&quot;#自定义Property&quot; class=&quot;headerlink&quot; title=&quot;自定义Property&quot;&gt;&lt;/a&gt;自定义Property&lt;/h3&gt;&lt;h4 id=&quot;gradle文件中定义&quot;&gt;&lt;a href=&quot;#gradle文件中定义&quot; class=&quot;headerlink&quot; title=&quot;gradle文件中定义&quot;&gt;&lt;/a&gt;gradle文件中定义&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;build.gradle中向Project添加额外的Property时，需要通过ext来定义。如下所示：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ext.propertyA = &amp;apos;this is propertyA&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ext &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    propertyB = &amp;apos;this is propertyB&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;命令行参数定义Property&quot;&gt;&lt;a href=&quot;#命令行参数定义Property&quot; class=&quot;headerlink&quot; title=&quot;命令行参数定义Property&quot;&gt;&lt;/a&gt;命令行参数定义Property&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;task showCmdProperty &amp;lt;&amp;lt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    println testA&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// -P设置Property，字符串使用双引号否则报错&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew -PtestA=&amp;quot;this is testA which is custom property&amp;quot; showCmdProperty&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;JVM系统参数定义Property&quot;&gt;&lt;a href=&quot;#JVM系统参数定义Property&quot; class=&quot;headerlink&quot; title=&quot;JVM系统参数定义Property&quot;&gt;&lt;/a&gt;JVM系统参数定义Property&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Java&lt;/code&gt;中可以通过&lt;code&gt;-D&lt;/code&gt;参数定义&lt;strong&gt;JVM&lt;/strong&gt;系统参数，然后在代码中通过&lt;strong&gt;System.getProperty()&lt;/strong&gt;获取系统参数。&lt;code&gt;Gradle&lt;/code&gt;中可以通过加上&lt;strong&gt;-Dorg.gradle.project前缀&lt;/strong&gt;设置&lt;code&gt;Property&lt;/code&gt;。示例如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;task showCmdProperty &amp;lt;&amp;lt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    println testB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew -Dorg.gradle.project.testB=&amp;quot;this is testB property&amp;quot; showCmdProperty&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;环境变量中定义Property&quot;&gt;&lt;a href=&quot;#环境变量中定义Property&quot; class=&quot;headerlink&quot; title=&quot;环境变量中定义Property&quot;&gt;&lt;/a&gt;环境变量中定义Property&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在定义环境变量时，每个Property都需要以&lt;strong&gt;ORG_GRADLE&lt;em&gt;PROJECT&lt;/em&gt;&lt;/strong&gt;为前缀，如下所示：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;task showCmdProperty &amp;lt;&amp;lt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    println testC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export ORG_GRADLE_PROJECT_testC=&amp;quot;this is testC property&amp;quot; showCmdProperty&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;扩展-Extension&quot;&gt;&lt;a href=&quot;#扩展-Extension&quot; class=&quot;headerlink&quot; title=&quot;扩展(Extension)&quot;&gt;&lt;/a&gt;扩展(&lt;strong&gt;Extension&lt;/strong&gt;)&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dateAndTime &amp;#123;// 扩展&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    timeFormat = &amp;apos;HH:mm:ss.SSS&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dateFormat = &amp;apos;MM/dd/yyyy&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;插件-Plugin&quot;&gt;&lt;a href=&quot;#插件-Plugin&quot; class=&quot;headerlink&quot; title=&quot;插件(Plugin)&quot;&gt;&lt;/a&gt;插件(&lt;strong&gt;Plugin&lt;/strong&gt;)&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class DateAndTimePlugin implements Plugin&amp;lt;Project&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void apply(Project project) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;类-Class&quot;&gt;&lt;a href=&quot;#类-Class&quot; class=&quot;headerlink&quot; title=&quot;类(Class)&quot;&gt;&lt;/a&gt;类(&lt;strong&gt;Class&lt;/strong&gt;)&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class DateAndTimePluginExtension &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String timeFormat = &amp;apos;MM/dd/yyyHH:mm:ss.SSS&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String dateFormat = &amp;apos;yyyy-MM-dd&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;闭包&quot;&gt;&lt;a href=&quot;#闭包&quot; class=&quot;headerlink&quot; title=&quot;闭包&quot;&gt;&lt;/a&gt;闭包&lt;/h2&gt;&lt;h3 id=&quot;委托-Delegate-机制&quot;&gt;&lt;a href=&quot;#委托-Delegate-机制&quot; class=&quot;headerlink&quot; title=&quot;委托(Delegate)机制&quot;&gt;&lt;/a&gt;委托(&lt;strong&gt;Delegate&lt;/strong&gt;)机制&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Groovy Bean&lt;/code&gt;对象直接访问属性的时候，&lt;code&gt;Groovy&lt;/code&gt;会&lt;strong&gt;隐式&lt;/strong&gt;动态地为属性创建&lt;strong&gt;getter&lt;/strong&gt;和&lt;strong&gt;setter&lt;/strong&gt;方法，示例如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Dog &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Animal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Dog dog = new Dog()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void config(Closure closure) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        closure.delegate = dog// 委托给dog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        closure.setResolveStrategy Closure.DELEGATE_FIRST// 设置delegate优先，默认owner优先&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        closure()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def animal = new Anima()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animal.config &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = &amp;quot;Husky&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;println animal.dog.name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;常见的使用场景&quot;&gt;&lt;a href=&quot;#常见的使用场景&quot; class=&quot;headerlink&quot; title=&quot;常见的使用场景&quot;&gt;&lt;/a&gt;常见的使用场景&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;project.configure()&lt;/code&gt;，委托给&lt;code&gt;ConfigurationContainer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;project.configure(Object obj, Closure confClosure)&lt;/code&gt;，委托给&lt;code&gt;Object&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;project.dependencies()&lt;/code&gt;，委托给&lt;code&gt;DependencyHandler&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;委托机制可以使我们将一个闭包中的执行代码作用对象设置成任意其它对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Android-Plugin&quot;&gt;&lt;a href=&quot;#Android-Plugin&quot; class=&quot;headerlink&quot; title=&quot;Android Plugin&quot;&gt;&lt;/a&gt;Android Plugin&lt;/h2&gt;&lt;h3 id=&quot;配置sourceSets&quot;&gt;&lt;a href=&quot;#配置sourceSets&quot; class=&quot;headerlink&quot; title=&quot;配置sourceSets&quot;&gt;&lt;/a&gt;配置sourceSets&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sourceSets &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.srcDirs = [&amp;apos;src/main/res&amp;apos;, &amp;apos;src/main/res-respkg&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jniLibs.srcDirs = [&amp;apos;libs&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建新的SourceSet&quot;&gt;&lt;a href=&quot;#创建新的SourceSet&quot; class=&quot;headerlink&quot; title=&quot;创建新的SourceSet&quot;&gt;&lt;/a&gt;创建新的SourceSet&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;默认情况下，custom所对应的Android源文件目录被Gradle框架设置为&lt;code&gt;${path-to-project}/src/customSet/java&lt;/code&gt;，资源文件目录则会设置为&lt;code&gt;${path-to-project}/src/customSet/resources&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Gradle自动地为每一个创建的sourceSet创建相应的Task。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sourceSets &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    customSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;依赖自定义SourceSet&quot;&gt;&lt;a href=&quot;#依赖自定义SourceSet&quot; class=&quot;headerlink&quot; title=&quot;依赖自定义SourceSet&quot;&gt;&lt;/a&gt;依赖自定义SourceSet&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 1st，main中task先依赖于customSet中的Task&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;classes.dependsOn customSetClasses&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 2nd，customSet生成的class文件放到main的classpath下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSets &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        compileClasspath = compileClasspath + files(customSet.output.classesDir)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        runtimeClasspath = runtimeClasspath + files(customSet.output.classesDir)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;配置-Configurations&quot;&gt;&lt;a href=&quot;#配置-Configurations&quot; class=&quot;headerlink&quot; title=&quot;配置(Configurations)&quot;&gt;&lt;/a&gt;配置(&lt;strong&gt;Configurations&lt;/strong&gt;)&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Gradle将依赖分组，编译和运行时使用不同的依赖，每组依赖称为一个Configuration。在声明依赖时，我们实际上是在设置不同的Configuration。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;插件中定义的Configuration&quot;&gt;&lt;a href=&quot;#插件中定义的Configuration&quot; class=&quot;headerlink&quot; title=&quot;插件中定义的Configuration&quot;&gt;&lt;/a&gt;插件中定义的Configuration&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Java Plugin&lt;/code&gt;定义了名为&lt;code&gt;compile&lt;/code&gt;和&lt;code&gt;testCompile&lt;/code&gt;的&lt;code&gt;Configuration&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Android Plugin&lt;/code&gt;定义了名为&lt;code&gt;androidTestCompile&lt;/code&gt;的&lt;code&gt;Configuration&lt;/code&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;自定义Configuration&quot;&gt;&lt;a href=&quot;#自定义Configuration&quot; class=&quot;headerlink&quot; title=&quot;自定义Configuration&quot;&gt;&lt;/a&gt;自定义Configuration&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;configurations &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    myDepency&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    myDepency &amp;apos;com.squareup.okhttp:okhttp:2.4.0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;task showMyDepency &amp;lt;&amp;lt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    configurations.myDepency.asPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;领域对象&quot;&gt;&lt;a href=&quot;#领域对象&quot; class=&quot;headerlink&quot; title=&quot;领域对象&quot;&gt;&lt;/a&gt;领域对象&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Gradle&lt;/code&gt;只提供构建项目的框架，真正起作用的是&lt;code&gt;Plugin&lt;/code&gt;。&lt;code&gt;Gradle&lt;/code&gt;不仅引入了&lt;code&gt;Task&lt;/code&gt;和&lt;code&gt;Property&lt;/code&gt;还引入了&lt;code&gt;Gradle&lt;/code&gt;项目的构建生命周期，常见的如&lt;code&gt;Java Plugin&lt;/code&gt;和&lt;code&gt;Android Plugin&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Gradle&lt;/code&gt;本身的领域对象主要有&lt;code&gt;Project&lt;/code&gt;和&lt;code&gt;Task&lt;/code&gt;。&lt;code&gt;Project&lt;/code&gt;为&lt;code&gt;Task&lt;/code&gt;提供了执行上下文，所有的&lt;code&gt;Plugin&lt;/code&gt;要么向&lt;code&gt;Project&lt;/code&gt;中添加用于配置的&lt;code&gt;Property&lt;/code&gt;，要么向&lt;code&gt;Project&lt;/code&gt;中添加不同的&lt;code&gt;Task&lt;/code&gt;。一个&lt;code&gt;Task&lt;/code&gt;表示一个逻辑上较为独立的执行过程。&lt;/p&gt;
&lt;p&gt;在没有显示指定调用对象的情况下，&lt;code&gt;Gradle&lt;/code&gt;会自动将调用对象设置成当前&lt;code&gt;Project&lt;/code&gt;。具体使用，请查看文档&lt;code&gt;Project&lt;/code&gt;类的方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;任务-Task&quot;&gt;&lt;a href=&quot;#任务-Task&quot; class=&quot;headerlink&quot; title=&quot;任务(Task)&quot;&gt;&lt;/a&gt;任务(&lt;strong&gt;Task&lt;/strong&gt;)&lt;/h2&gt;
    
    </summary>
    
      <category term="Gradle系列" scheme="http://Res2013.github.io/ss/categories/Gradle%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="Gradle基础" scheme="http://Res2013.github.io/ss/tags/Gradle%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Java源码分析</title>
    <link href="http://Res2013.github.io/ss/2018/04/12/Java%E5%9F%BA%E7%A1%80/Java%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://Res2013.github.io/ss/2018/04/12/Java基础/Java源码分析/</id>
    <published>2018-04-12T07:24:00.000Z</published>
    <updated>2018-06-24T09:06:25.332Z</updated>
    
    <content type="html">&lt;h2 id=&quot;编译源码&quot;&gt;&lt;a href=&quot;#编译源码&quot; class=&quot;headerlink&quot; title=&quot;编译源码&quot;&gt;&lt;/a&gt;编译源码&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;javac Test.java&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;查看字节码&quot;&gt;&lt;a href=&quot;#查看字节码&quot; class=&quot;headerlink&quot; title=&quot;查看字节码&quot;&gt;&lt;/a&gt;查看字节码&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;javap Test.class&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;反编译字节码&quot;&gt;&lt;a href=&quot;#反编译字节码&quot; class=&quot;headerlink&quot; title=&quot;反编译字节码&quot;&gt;&lt;/a&gt;反编译字节码&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;javap -c Test.class&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;翻译字节码工具&quot;&gt;&lt;a href=&quot;#翻译字节码工具&quot; class=&quot;headerlink&quot; title=&quot;翻译字节码工具&quot;&gt;&lt;/a&gt;翻译字节码工具&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;下载 &lt;a href=&quot;[http://www.javadecompilers.com/jad](http://www.javadecompilers.com/jad&quot;&gt;jad&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jad.ext -sjava Test.class&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jd-gui或idea插件也都可以查看&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;编译源码&quot;&gt;&lt;a href=&quot;#编译源码&quot; class=&quot;headerlink&quot; title=&quot;编译源码&quot;&gt;&lt;/a&gt;编译源码&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;javac Test.java&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java基础" scheme="http://Res2013.github.io/ss/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java源码分析" scheme="http://Res2013.github.io/ss/tags/Java%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>CardView常见问题</title>
    <link href="http://Res2013.github.io/ss/2018/03/29/CardView%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <id>http://Res2013.github.io/ss/2018/03/29/CardView常见问题/</id>
    <published>2018-03-29T09:35:00.000Z</published>
    <updated>2018-06-24T07:13:25.300Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;1.CardView背景设置使用app:cardBackgroundColor，不支持图片&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;2.CardView底部显示不全，阴影效果被切了一部分，是因为缺少margin&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;1.CardView背景设置使用app:cardBackgroundColor，不支持图片&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;2.CardView底部显示不全，阴影效果被切了一部分，是因为缺少margin&lt;/p&gt;
&lt;/b
    
    </summary>
    
      <category term="CardView常见问题" scheme="http://Res2013.github.io/ss/categories/CardView%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="CardView" scheme="http://Res2013.github.io/ss/tags/CardView/"/>
    
  </entry>
  
  <entry>
    <title>常用UI库</title>
    <link href="http://Res2013.github.io/ss/2017/12/28/%E5%B8%B8%E7%94%A8UI%E5%BA%93/"/>
    <id>http://Res2013.github.io/ss/2017/12/28/常用UI库/</id>
    <published>2017-12-28T09:14:00.000Z</published>
    <updated>2018-06-24T07:39:52.112Z</updated>
    
    <content type="html">&lt;h1 id=&quot;常用UI库&quot;&gt;&lt;a href=&quot;#常用UI库&quot; class=&quot;headerlink&quot; title=&quot;常用UI库&quot;&gt;&lt;/a&gt;常用UI库&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;1. 画廊效果&lt;a href=&quot;https://github.com/yarolegovich/DiscreteScrollView&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DiscreteScrollView&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;2. 广告轮播指示器&lt;a href=&quot;https://github.com/youth5201314/banner&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;banner&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;3. &lt;a href=&quot;https://github.com/CymChad/BaseRecyclerViewAdapterHelper&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BRVAH&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;4. &lt;a href=&quot;https://github.com/alibaba/vlayout&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VLayout&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;5. 下拉刷新框架&lt;a href=&quot;https://github.com/scwang90/SmartRefreshLayout&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SmartRefreshLayout&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;6. &lt;a href=&quot;https://github.com/daimajia/AndroidSwipeLayout&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndroidSwipeLayout&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;7. &lt;a href=&quot;https://github.com/daimajia/AndroidViewAnimations&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndroidViewAnimations&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;常用UI库&quot;&gt;&lt;a href=&quot;#常用UI库&quot; class=&quot;headerlink&quot; title=&quot;常用UI库&quot;&gt;&lt;/a&gt;常用UI库&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;1. 画廊效果&lt;a href=&quot;https://github.com/yarolegovich/DiscreteScrollView&quot;&gt;DiscreteScrollView&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;2. 广告轮播指示器&lt;a href=&quot;https://github.com/youth5201314/banner&quot;&gt;banner&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;3. &lt;a href=&quot;https://github.com/CymChad/BaseRecyclerViewAdapterHelper&quot;&gt;BRVAH&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="常用UI库" scheme="http://Res2013.github.io/ss/categories/%E5%B8%B8%E7%94%A8UI%E5%BA%93/"/>
    
    
      <category term="UI库" scheme="http://Res2013.github.io/ss/tags/UI%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>发布带source和javadoc的aar包</title>
    <link href="http://Res2013.github.io/ss/2017/09/01/Gradle%E7%B3%BB%E5%88%97/%E5%8F%91%E5%B8%83%E5%B8%A6source%E5%92%8Cjavadoc%E7%9A%84aar%E5%8C%85/"/>
    <id>http://Res2013.github.io/ss/2017/09/01/Gradle系列/发布带source和javadoc的aar包/</id>
    <published>2017-09-01T11:53:00.000Z</published>
    <updated>2018-06-24T09:14:05.434Z</updated>
    
    <content type="html">&lt;h2 id=&quot;上传Library&quot;&gt;&lt;a href=&quot;#上传Library&quot; class=&quot;headerlink&quot; title=&quot;上传Library&quot;&gt;&lt;/a&gt;上传Library&lt;/h2&gt;&lt;h3 id=&quot;修改Module-level的build-gradle&quot;&gt;&lt;a href=&quot;#修改Module-level的build-gradle&quot; class=&quot;headerlink&quot; title=&quot;修改Module level的build.gradle&quot;&gt;&lt;/a&gt;修改Module level的build.gradle&lt;/h3&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;maven&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; androidJavadocs(type: Javadoc) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt; = android.&lt;span class=&quot;keyword&quot;&gt;sourceSets&lt;/span&gt;.main.java.srcDirs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;classpath&lt;/span&gt; += &lt;span class=&quot;keyword&quot;&gt;project&lt;/span&gt;.files(android.getBootClasspath().&lt;span class=&quot;keyword&quot;&gt;join&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt;.pathSeparator))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;destinationDir&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;../javadoc/&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    failOnError &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; androidSourcesJar(type: Jar) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classifier = &lt;span class=&quot;string&quot;&gt;&#39;sources&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; android.&lt;span class=&quot;keyword&quot;&gt;sourceSets&lt;/span&gt;.main.java.srcDirs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; androidJavadocJar(type: Jar) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classifier = &lt;span class=&quot;string&quot;&gt;&#39;javadoc&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; androidJavadocs.&lt;span class=&quot;keyword&quot;&gt;destinationDir&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uploadArchives &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mavenDeployer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            snapshotRepository(url: &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.x.x:port/nexus/content/repositories/snapshots&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                authentication(userName: &lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;, password: &lt;span class=&quot;string&quot;&gt;&#39;pwd&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            repository(url: &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.x.x:port/nexus/content/repositories/releases&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                authentication(userName: &lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;, password: &lt;span class=&quot;string&quot;&gt;&#39;pwd&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pom.&lt;span class=&quot;keyword&quot;&gt;project&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                version &lt;span class=&quot;string&quot;&gt;&#39;1.0.0-SNAPSHOT&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//debug版本号  releases版本去掉SNAPSHOT即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                artifactId &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                groupId &lt;span class=&quot;string&quot;&gt;&#39;xxx.xxx.xxx&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                packaging &lt;span class=&quot;string&quot;&gt;&#39;aar&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;xxx&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;artifacts&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    archives androidSourcesJar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    archives androidJavadocJar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;执行上传脚本&quot;&gt;&lt;a href=&quot;#执行上传脚本&quot; class=&quot;headerlink&quot; title=&quot;执行上传脚本&quot;&gt;&lt;/a&gt;执行上传脚本&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;点击右侧菜单&lt;strong&gt;Gradle&lt;/strong&gt;，找到需要上传的&lt;code&gt;Module&lt;/code&gt;，继续寻找&lt;code&gt;upload&lt;/code&gt;，然后双击里面的&lt;code&gt;uploadArchives&lt;/code&gt;，成功即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;使用library&quot;&gt;&lt;a href=&quot;#使用library&quot; class=&quot;headerlink&quot; title=&quot;使用library&quot;&gt;&lt;/a&gt;使用library&lt;/h2&gt;&lt;h3 id=&quot;修改Project-level的build-gradle&quot;&gt;&lt;a href=&quot;#修改Project-level的build-gradle&quot; class=&quot;headerlink&quot; title=&quot;修改Project level的build.gradle&quot;&gt;&lt;/a&gt;修改Project level的build.gradle&lt;/h3&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;allprojects&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  maven &amp;#123; url &lt;span class=&quot;string&quot;&gt;&quot;https://jitpack.io&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  maven &amp;#123; url &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.x.x:port/nexus/content/repositories/snapshots&#39;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  maven &amp;#123; url &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.x.x:port/nexus/content/repositories/releases&#39;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;修改Module-level的build-gradle-1&quot;&gt;&lt;a href=&quot;#修改Module-level的build-gradle-1&quot; class=&quot;headerlink&quot; title=&quot;修改Module level的build.gradle&quot;&gt;&lt;/a&gt;修改Module level的build.gradle&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;configurations.all &amp;#123;// 强制更新快照，防止出现代码已上传本地不更新&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolutionStrategy.cacheChangingModulesFor  0,&amp;apos;seconds&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上传Library&quot;&gt;&lt;a href=&quot;#上传Library&quot; class=&quot;headerlink&quot; title=&quot;上传Library&quot;&gt;&lt;/a&gt;上传Library&lt;/h2&gt;&lt;h3 id=&quot;修改Module-level的build-gradle&quot;&gt;&lt;a href=&quot;#修改Module-level的build-gradle&quot; class=&quot;headerlink&quot; title=&quot;修改Module level的build.gradle&quot;&gt;&lt;/a&gt;修改Module level的build.gradle&lt;/h3&gt;
    
    </summary>
    
      <category term="Gradle系列" scheme="http://Res2013.github.io/ss/categories/Gradle%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="aar" scheme="http://Res2013.github.io/ss/tags/aar/"/>
    
  </entry>
  
  <entry>
    <title>快速运行Android开源项目的正确方式</title>
    <link href="http://Res2013.github.io/ss/2016/10/21/%E5%BF%AB%E9%80%9F%E8%BF%90%E8%A1%8C%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%AD%A3%E7%A1%AE%E6%96%B9%E5%BC%8F/"/>
    <id>http://Res2013.github.io/ss/2016/10/21/快速运行开源项目的正确方式/</id>
    <published>2016-10-21T12:52:00.000Z</published>
    <updated>2018-06-24T09:12:38.226Z</updated>
    
    <content type="html">&lt;h2 id=&quot;传统打开开源项目方式&quot;&gt;&lt;a href=&quot;#传统打开开源项目方式&quot; class=&quot;headerlink&quot; title=&quot;传统打开开源项目方式&quot;&gt;&lt;/a&gt;传统打开开源项目方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;1.下载源码&lt;br&gt;2.打开Android Studio&lt;br&gt;3.导入项目&lt;br&gt;4.Sync gradle&lt;br&gt;5.运行项目&lt;br&gt;&amp;emsp;&amp;emsp;因为&lt;code&gt;Android Studio&lt;/code&gt;很吃内存,启动需要费不少时间,且编译、运行更卡。如果我们仅仅是想得到apk看下效果而运行&lt;code&gt;Android Studio&lt;/code&gt;那就太麻烦了,要是同时看多个项目要么就一个个工程切换,要么同时打开多个&lt;code&gt;Android Studio&lt;/code&gt;窗口那更是卡的飞起啊。那有没有更好的方式呢,答案肯定是有的,请往下看!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;快速的打开方式&quot;&gt;&lt;a href=&quot;#快速的打开方式&quot; class=&quot;headerlink&quot; title=&quot;快速的打开方式&quot;&gt;&lt;/a&gt;快速的打开方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;下载&lt;code&gt;Android Studio&lt;/code&gt;源码,利用&lt;code&gt;Android Studio&lt;/code&gt;项目中内置的&lt;code&gt;gradle wrapper&lt;/code&gt;来进行编译、打包、运行工程,大概流程如下:&lt;br&gt;&lt;code&gt;Windows&lt;/code&gt;系统采用如下方式:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd projectDir // cd到工程的根目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew clean // 移除所有的编译输出文件,如apk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew build // 生成apk并执行lint检测编译&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果想编译、打包、安装一步操作完成,可以这么做:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd projectDir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gradlew installDebug // 安装debug版apk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;更快速的运行Github上源码的方式&quot;&gt;&lt;a href=&quot;#更快速的运行Github上源码的方式&quot; class=&quot;headerlink&quot; title=&quot;更快速的运行Github上源码的方式&quot;&gt;&lt;/a&gt;更快速的运行Github上源码的方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;你只需要安装这么一个工具,就可以一”键”下载、编译、打包、运行。该工具地址为:&lt;br&gt;&lt;a href=&quot;https://github.com/cesarferreira/dryrun&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/cesarferreira/dryrun&lt;/a&gt;&lt;br&gt;安装该工具之后只需要执行一句命令:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dryrun https://github.com/cesarferreira/android-helloworld&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;tips: &lt;code&gt;dryrun&lt;/code&gt;是一个&lt;code&gt;gem&lt;/code&gt;,它是基于&lt;code&gt;ruby&lt;/code&gt;的,如果对于&lt;code&gt;ruby&lt;/code&gt;不是很了解,安装起来比较耗时虽然高版本&lt;code&gt;ruby&lt;/code&gt;已经内置了&lt;code&gt;gem&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Gradle包下载失败解决方法&quot;&gt;&lt;a href=&quot;#Gradle包下载失败解决方法&quot; class=&quot;headerlink&quot; title=&quot;Gradle包下载失败解决方法&quot;&gt;&lt;/a&gt;Gradle包下载失败解决方法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;如果不翻墙直接下载&lt;code&gt;gradle&lt;/code&gt;包很大可能会失败,那么此时把下载链接复制到迅雷里下载,下载完成后把该&lt;code&gt;zip&lt;/code&gt;文件复制到&lt;code&gt;C:\Users\Administrator\.gradle\wrapper\dists\gradle-2.14.1-all\8bnwg5hd3w55iofp58khbp6yv&lt;/code&gt;文件夹里(文件夹名字和UUID有关,这里视具体情况做相应修改)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Gradle-Build下载依赖jar包失败解决方法&quot;&gt;&lt;a href=&quot;#Gradle-Build下载依赖jar包失败解决方法&quot; class=&quot;headerlink&quot; title=&quot;Gradle Build下载依赖jar包失败解决方法&quot;&gt;&lt;/a&gt;Gradle Build下载依赖jar包失败解决方法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;Windows系统下gradle默认的依赖存放地址为:&lt;br&gt;&lt;code&gt;C:\Users\Administrator\.gradle\caches\modules-2\files-2.1&lt;/code&gt;,那么你还是将该&lt;code&gt;jar&lt;/code&gt;包下载地址复制到迅雷里,下载完成后在依赖存放目录下找到对应的包名目录(下载地址里包含了包名),然后拷贝进去,此时记得删除该包下文件否则会因为文件被锁&lt;code&gt;build&lt;/code&gt;失败。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;1.在利用&lt;code&gt;gradlew&lt;/code&gt;运行&lt;code&gt;Android&lt;/code&gt;项目之前需要检查&lt;code&gt;gradle&lt;/code&gt;,&lt;code&gt;buildTools&lt;/code&gt;,&lt;code&gt;comileSdk&lt;/code&gt;版本是否与本地一致,如果不一致则报错。&lt;br&gt;2.&lt;code&gt;Ndk&lt;/code&gt;工程注意修改&lt;code&gt;local.properties&lt;/code&gt;文件中&lt;code&gt;sdk&lt;/code&gt;和&lt;code&gt;ndk&lt;/code&gt;的路径,以及删除工程中&lt;code&gt;.externalNativeBuild&lt;/code&gt;文件夹中&lt;code&gt;cmake&lt;/code&gt;文件夹(这里是按照官网最新的CMake方式,而非ndk-build方式)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者 &lt;a href=&quot;https://www.github.com/Res2013&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Res2013&lt;/a&gt;&lt;br&gt;2016 年 10月 21日&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传统打开开源项目方式&quot;&gt;&lt;a href=&quot;#传统打开开源项目方式&quot; class=&quot;headerlink&quot; title=&quot;传统打开开源项目方式&quot;&gt;&lt;/a&gt;传统打开开源项目方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;1.下载源码&lt;br&gt;2.打开Android Studio&lt;br&gt;3.导入项目&lt;br&gt;4.Sync gradle&lt;br&gt;5.运行项目&lt;br&gt;&amp;emsp;&amp;emsp;因为&lt;code&gt;Android Studio&lt;/code&gt;很吃内存,启动需要费不少时间,且编译、运行更卡。如果我们仅仅是想得到apk看下效果而运行&lt;code&gt;Android Studio&lt;/code&gt;那就太麻烦了,要是同时看多个项目要么就一个个工程切换,要么同时打开多个&lt;code&gt;Android Studio&lt;/code&gt;窗口那更是卡的飞起啊。那有没有更好的方式呢,答案肯定是有的,请往下看!&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="快速运行开源项目" scheme="http://Res2013.github.io/ss/categories/%E5%BF%AB%E9%80%9F%E8%BF%90%E8%A1%8C%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="运行开源项目" scheme="http://Res2013.github.io/ss/tags/%E8%BF%90%E8%A1%8C%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>RxAndroid入门</title>
    <link href="http://Res2013.github.io/ss/2016/05/26/RxAndroid%E5%85%A5%E9%97%A8/"/>
    <id>http://Res2013.github.io/ss/2016/05/26/RxAndroid入门/</id>
    <published>2016-05-26T14:20:43.000Z</published>
    <updated>2018-06-24T03:51:06.412Z</updated>
    
    <content type="html">&lt;h2 id=&quot;什么是RxAndroid？&quot;&gt;&lt;a href=&quot;#什么是RxAndroid？&quot; class=&quot;headerlink&quot; title=&quot;什么是RxAndroid？&quot;&gt;&lt;/a&gt;什么是RxAndroid？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;RxAndroid&lt;/code&gt;是基于响应式扩展框架&lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RxJava&lt;/a&gt;的&lt;code&gt;Android&lt;/code&gt;实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;RxAndroid的优点？&quot;&gt;&lt;a href=&quot;#RxAndroid的优点？&quot; class=&quot;headerlink&quot; title=&quot;RxAndroid的优点？&quot;&gt;&lt;/a&gt;RxAndroid的优点？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;a href=&quot;https://github.com/ReactiveX/RxAndroid&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RxAndroid&lt;/a&gt;将大量的类绑定到&lt;code&gt;RxJava&lt;/code&gt;，使得在&lt;code&gt;Android&lt;/code&gt;应用中编写响应式组件变得非常直观、简单。并且它可以优雅地处理异步请求，配合上&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lambda表达式&lt;/a&gt;尤其是当中的&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;方法引用&lt;/a&gt;，可以大大简化回调函数的处理，提高编码效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;如何在Android-Studio中使用？&quot;&gt;&lt;a href=&quot;#如何在Android-Studio中使用？&quot; class=&quot;headerlink&quot; title=&quot;如何在Android Studio中使用？&quot;&gt;&lt;/a&gt;如何在Android Studio中使用？&lt;/h2&gt;&lt;h3 id=&quot;在build-gradle中配置&quot;&gt;&lt;a href=&quot;#在build-gradle中配置&quot; class=&quot;headerlink&quot; title=&quot;在build.gradle中配置&quot;&gt;&lt;/a&gt;在build.gradle中配置&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compile &amp;apos;com.jakewharton:butterknife:7.0.1&amp;apos; // ButterKnife注解库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compile &amp;apos;io.reactivex:rxandroid:1.2.0&amp;apos; // RxAndroid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compile &amp;apos;io.reactivex:rxjava:1.1.5&amp;apos; // RxJava&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;在代码中使用&quot;&gt;&lt;a href=&quot;#在代码中使用&quot; class=&quot;headerlink&quot; title=&quot;在代码中使用&quot;&gt;&lt;/a&gt;在代码中使用&lt;/h3&gt;&lt;h4 id=&quot;创建一个观察者对象发出数据&quot;&gt;&lt;a href=&quot;#创建一个观察者对象发出数据&quot; class=&quot;headerlink&quot; title=&quot;创建一个观察者对象发出数据&quot;&gt;&lt;/a&gt;创建一个观察者对象发出数据&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 这里指定了订阅者订阅的事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 如果没有一个订阅者,则观察者不发送任何事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Observable&amp;lt;String&amp;gt; mObservable = Observable.create(  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Observable.OnSubscribe&amp;lt;String&amp;gt;() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Subscriber&amp;lt;? &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; String&amp;gt; sub)&lt;/span&gt; &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sub.onNext(&lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;// 发送事件  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sub.onCompleted();&lt;span class=&quot;comment&quot;&gt;// 完成事件  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;指定一个线程来传递数据&quot;&gt;&lt;a href=&quot;#指定一个线程来传递数据&quot; class=&quot;headerlink&quot; title=&quot;指定一个线程来传递数据&quot;&gt;&lt;/a&gt;指定一个线程来传递数据&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;观察者&lt;code&gt;Observable&lt;/code&gt;发送数据给主线程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mObservable.observeOn(AndroidSchedulers.mainThread());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;观察者分发订阅的事件&quot;&gt;&lt;a href=&quot;#观察者分发订阅的事件&quot; class=&quot;headerlink&quot; title=&quot;观察者分发订阅的事件&quot;&gt;&lt;/a&gt;观察者分发订阅的事件&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;主线程把数据传递给订阅者&lt;code&gt;Subscriber&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mObservable.subscribe(mSubscriber1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mobservable.subscribe(mSubscriber2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;创建若干个订阅者处理数据&quot;&gt;&lt;a href=&quot;#创建若干个订阅者处理数据&quot; class=&quot;headerlink&quot; title=&quot;创建若干个订阅者处理数据&quot;&gt;&lt;/a&gt;创建若干个订阅者处理数据&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;订阅者最终处理数据。上面例子是主线程传递数据的，所以这里传递和接收的方式是同步的。其它很多时候传递、接收方式可以是异步的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Subscriber&amp;lt;String&amp;gt; mSubscriber1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Subscriber&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onNext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123; mTvText.setText(s); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCompleted&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Throwable e)&lt;/span&gt; &lt;/span&gt;&amp;#123; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Subscriber&amp;lt;String&amp;gt; mSubscriber2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Subscriber&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onNext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Toast.makeText(MainActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, s,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCompleted&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onError&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Throwable e)&lt;/span&gt; &lt;/span&gt;&amp;#123; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用Lambda表达式重构代码&quot;&gt;&lt;a href=&quot;#使用Lambda表达式重构代码&quot; class=&quot;headerlink&quot; title=&quot;使用Lambda表达式重构代码&quot;&gt;&lt;/a&gt;使用Lambda表达式重构代码&lt;/h3&gt;&lt;h4 id=&quot;在build-gradle中配置-1&quot;&gt;&lt;a href=&quot;#在build-gradle中配置-1&quot; class=&quot;headerlink&quot; title=&quot;在build.gradle中配置&quot;&gt;&lt;/a&gt;在build.gradle中配置&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;Gradle 2.1&lt;/code&gt;以上且安装&lt;code&gt;JDK8&lt;/code&gt;才可以如此使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;plugins &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id &amp;quot;me.tatarka.retrolambda&amp;quot; version &amp;quot;3.2.4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compileOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sourceCompatibility JavaVersion.VERSION_1_8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetCompatibility JavaVersion.VERSION_1_8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;开始重构代码&quot;&gt;&lt;a href=&quot;#开始重构代码&quot; class=&quot;headerlink&quot; title=&quot;开始重构代码&quot;&gt;&lt;/a&gt;开始重构代码&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Bind&lt;/span&gt;(R.id.tv_text) TextView mTvText;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ButterKnife.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        * 当方法参数和返回值与Lambda表达式相同时，可以使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        * 方法名代替，这种就是更为简单的方法引用(References)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 创建观察者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Observable&amp;lt;String&amp;gt; observable =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Observable.create(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;::handOutEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 分发订阅事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        observable.observeOn(AndroidSchedulers.mainThread());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        observable.subscribe(mTvText::setText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        observable.subscribe(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;::showToast);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handOutEvent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Subscriber subscriber)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        subscriber.onNext(&lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 发送事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        subscriber.onCompleted(); &lt;span class=&quot;comment&quot;&gt;// 完成事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 显示Toast&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showToast&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Toast.makeText(MainActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, s,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;作者 &lt;a href=&quot;https://www.github.com/Res2013&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Res2013&lt;/a&gt;&lt;br&gt;2016 年 05月 26日&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是RxAndroid？&quot;&gt;&lt;a href=&quot;#什么是RxAndroid？&quot; class=&quot;headerlink&quot; title=&quot;什么是RxAndroid？&quot;&gt;&lt;/a&gt;什么是RxAndroid？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;RxAndroid&lt;/code&gt;是基于响应式扩展框架&lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot;&gt;RxJava&lt;/a&gt;的&lt;code&gt;Android&lt;/code&gt;实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;RxAndroid的优点？&quot;&gt;&lt;a href=&quot;#RxAndroid的优点？&quot; class=&quot;headerlink&quot; title=&quot;RxAndroid的优点？&quot;&gt;&lt;/a&gt;RxAndroid的优点？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;a href=&quot;https://github.com/ReactiveX/RxAndroid&quot;&gt;RxAndroid&lt;/a&gt;将大量的类绑定到&lt;code&gt;RxJava&lt;/code&gt;，使得在&lt;code&gt;Android&lt;/code&gt;应用中编写响应式组件变得非常直观、简单。并且它可以优雅地处理异步请求，配合上&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;Lambda表达式&lt;/a&gt;尤其是当中的&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html&quot;&gt;方法引用&lt;/a&gt;，可以大大简化回调函数的处理，提高编码效率。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android开发框架" scheme="http://Res2013.github.io/ss/categories/Android%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="RxAndroid" scheme="http://Res2013.github.io/ss/tags/RxAndroid/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse下Android JNI开发方式之一</title>
    <link href="http://Res2013.github.io/ss/2016/05/17/NDK%E5%BC%80%E5%8F%91/Eclipse%E4%B8%8BAndroid-JNI%E5%BC%80%E5%8F%91%E6%96%B9%E5%BC%8F%E4%B9%8B%E4%B8%80/"/>
    <id>http://Res2013.github.io/ss/2016/05/17/NDK开发/Eclipse下Android-JNI开发方式之一/</id>
    <published>2016-05-16T17:00:45.000Z</published>
    <updated>2018-06-24T07:51:52.255Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Eclipse下Android-JNI开发方式之一&quot;&gt;&lt;a href=&quot;#Eclipse下Android-JNI开发方式之一&quot; class=&quot;headerlink&quot; title=&quot;Eclipse下Android JNI开发方式之一&quot;&gt;&lt;/a&gt;Eclipse下Android JNI开发方式之一&lt;/h1&gt;&lt;h2 id=&quot;创建一个Android工程&quot;&gt;&lt;a href=&quot;#创建一个Android工程&quot; class=&quot;headerlink&quot; title=&quot;创建一个Android工程&quot;&gt;&lt;/a&gt;创建一个Android工程&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example.jnitest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.TextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TextView mTextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTextView = (TextView) findViewById(R.id.tv_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        JNITest jni = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JNITest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String str = jni.getJNIString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTextView.setText(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;设计一个JNI接口&quot;&gt;&lt;a href=&quot;#设计一个JNI接口&quot; class=&quot;headerlink&quot; title=&quot;设计一个JNI接口&quot;&gt;&lt;/a&gt;设计一个JNI接口&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example.jnitest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JNITest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getJNIString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;编译JNI生成头文件&quot;&gt;&lt;a href=&quot;#编译JNI生成头文件&quot; class=&quot;headerlink&quot; title=&quot;编译JNI生成头文件&quot;&gt;&lt;/a&gt;编译JNI生成头文件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;在终端中&lt;code&gt;cd&lt;/code&gt;到该工程的&lt;code&gt;JNITest&lt;/code&gt;类所在目录下，输入:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ javac TestJNI.java&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;这时候会生成一个&lt;code&gt;JNITest.class&lt;/code&gt;文件，剪切到&lt;code&gt;/bin/com/example/jnitest目录下&lt;/code&gt;，如果该目录不存在则手动创建，然后输入:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ javah -jni com.example.jnitest.JNITest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;这个时候会生成一个&lt;code&gt;com_exmpale_jnitest_JNITest.h&lt;/code&gt;文件，这就是上面的&lt;code&gt;Java&lt;/code&gt;接口的&lt;code&gt;C/C++&lt;/code&gt;头文件，打开这个文件可以看到&lt;code&gt;Eclipse&lt;/code&gt;已经为我们自动完成了接口函数的声明：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* DO NOT EDIT THIS FILE - it is machine generated */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* Header for class com_example_jnitest_JNITest */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifndef&lt;/span&gt; _Included_com_example_jnitest_JNITest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; _Included_com_example_jnitest_JNITest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Class:     com_example_jnitest_JNITest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Method:    init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Signature: ()Z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jboolean JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jnitest_JNITest_init&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jobject)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Class:     com_example_jnitest_JNITest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Method:    getJNIString&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Signature: ()Ljava/lang/String;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jnitest_JNITest_getJNIString&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jobject)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Class:     com_example_jnitest_JNITest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Method:    destroy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Signature: ()V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jnitest_JNITest_destroy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jobject)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;C-C-实现JNI接口&quot;&gt;&lt;a href=&quot;#C-C-实现JNI接口&quot; class=&quot;headerlink&quot; title=&quot;C/C++实现JNI接口&quot;&gt;&lt;/a&gt;C/C++实现JNI接口&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;上面生成了&lt;code&gt;JNI&lt;/code&gt;的&lt;code&gt;C/C++&lt;/code&gt;头文件后，就可以在&lt;code&gt;C&lt;/code&gt;层实现&lt;code&gt;JNI&lt;/code&gt;接口了。在Project下新建一个&lt;code&gt;jni&lt;/code&gt;文件夹，然后把生成的头文件拷贝到该文件夹里，并且在该文件夹下新建一个&lt;code&gt;jnitest.c&lt;/code&gt;文件和&lt;code&gt;Android.mk&lt;/code&gt;文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;jnitest.c&lt;/code&gt;文件如下图：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;com_example_jnitest_JNITest.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jnitest_JNITest_getJNIString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		JNIEnv *env, jobject obj)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return (*env) -&amp;gt; NewStringUTF(env,&lt;span class=&quot;string&quot;&gt;&quot;Res2013&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Android.mk&lt;/code&gt;文件如下图：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_PATH := $(call my-dir)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include $(CLEAR_VARS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_MODULE := jnitest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOCAL_SRC_FILES := jniTest.c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include $(BUILD_SHARED_LIBRARY)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;编译生成-so文件&quot;&gt;&lt;a href=&quot;#编译生成-so文件&quot; class=&quot;headerlink&quot; title=&quot;编译生成.so文件&quot;&gt;&lt;/a&gt;编译生成.so文件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;在终端进入该项目的&lt;code&gt;jni&lt;/code&gt;目录下，使用命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ndk-build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么生成的&lt;code&gt;jnitest.so&lt;/code&gt;文件会自动添加到&lt;code&gt;libs/armeabi&lt;/code&gt;目录下&lt;/p&gt;
&lt;h2 id=&quot;最后直接运行android程序就OK了&quot;&gt;&lt;a href=&quot;#最后直接运行android程序就OK了&quot; class=&quot;headerlink&quot; title=&quot;最后直接运行android程序就OK了&quot;&gt;&lt;/a&gt;最后直接运行android程序就OK了&lt;/h2&gt;&lt;p&gt;作者 &lt;a href=&quot;https://www.github.com/Res2013&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Res2013&lt;/a&gt;&lt;br&gt;2016 年 05月 17日&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Eclipse下Android-JNI开发方式之一&quot;&gt;&lt;a href=&quot;#Eclipse下Android-JNI开发方式之一&quot; class=&quot;headerlink&quot; title=&quot;Eclipse下Android JNI开发方式之一&quot;&gt;&lt;/a&gt;Eclipse下Android JNI开发方式之一&lt;/h1&gt;&lt;h2 id=&quot;创建一个Android工程&quot;&gt;&lt;a href=&quot;#创建一个Android工程&quot; class=&quot;headerlink&quot; title=&quot;创建一个Android工程&quot;&gt;&lt;/a&gt;创建一个Android工程&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example.jnitest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.TextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TextView mTextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTextView = (TextView) findViewById(R.id.tv_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        JNITest jni = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JNITest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String str = jni.getJNIString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTextView.setText(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;设计一个JNI接口&quot;&gt;&lt;a href=&quot;#设计一个JNI接口&quot; class=&quot;headerlink&quot; title=&quot;设计一个JNI接口&quot;&gt;&lt;/a&gt;设计一个JNI接口&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example.jnitest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JNITest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getJNIString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="NDK开发" scheme="http://Res2013.github.io/ss/categories/NDK%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="JNI" scheme="http://Res2013.github.io/ss/tags/JNI/"/>
    
  </entry>
  
  <entry>
    <title>字符编码浅谈</title>
    <link href="http://Res2013.github.io/ss/2016/05/16/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E6%B5%85%E8%B0%88/"/>
    <id>http://Res2013.github.io/ss/2016/05/16/字符编码浅谈/</id>
    <published>2016-05-15T17:27:18.000Z</published>
    <updated>2018-06-24T03:39:32.751Z</updated>
    
    <content type="html">&lt;h2 id=&quot;为什么有字符编码&quot;&gt;&lt;a href=&quot;#为什么有字符编码&quot; class=&quot;headerlink&quot; title=&quot;为什么有字符编码?&quot;&gt;&lt;/a&gt;为什么有字符编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能够处理。最早的时候只有127个大小写英文字母、数字和一些符号被编码到计算机里,称为&lt;code&gt;ASCII&lt;/code&gt;编码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是Unicode编码&quot;&gt;&lt;a href=&quot;#什么是Unicode编码&quot; class=&quot;headerlink&quot; title=&quot;什么是Unicode编码?&quot;&gt;&lt;/a&gt;什么是Unicode编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;Unicode&lt;/code&gt;编码也叫做统一码、万国码、单一码，是计算机科学领域里的一项业界标准，包括字符集、编码方案等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;为什么有Unicode编码&quot;&gt;&lt;a href=&quot;#为什么有Unicode编码&quot; class=&quot;headerlink&quot; title=&quot;为什么有Unicode编码?&quot;&gt;&lt;/a&gt;为什么有Unicode编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;全世界有几千多种语言，如中文有自己制定的&lt;code&gt;GB2312&lt;/code&gt;编码，日文有&lt;code&gt;Shift_JIS&lt;/code&gt;编码等等，那么如果在多语言混合的文本中就会出现乱码。那么这个时候&lt;code&gt;Unicode&lt;/code&gt;编码应运而生，所有语言都统一使用同一套编码，这样就不会出现乱码问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;为什么有UTF-8编码&quot;&gt;&lt;a href=&quot;#为什么有UTF-8编码&quot; class=&quot;headerlink&quot; title=&quot;为什么有UTF-8编码?&quot;&gt;&lt;/a&gt;为什么有UTF-8编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;虽然统一了编码格式，解决了乱码问题，但是新的问题又产生了，是什么呢?&lt;br&gt;&lt;code&gt;ASCII&lt;/code&gt;编码是1个字节，Unicode编码通常是2个字节，如下图所示:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;ASCII&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Unicode&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;01000001&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;00000000 01000001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘0’&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;00110000&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;00000000 00110000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;那么如果你所写的文本基本上是类似字符&lt;code&gt;A&lt;/code&gt;和字符&lt;code&gt;0&lt;/code&gt;这样的数据的话，使用&lt;code&gt;Unicode&lt;/code&gt;编码就会比&lt;code&gt;ASCII&lt;/code&gt;编码多出一倍的存储空间，在存储和传输上就会非常不划算。所以，此时”可变长编码”的&lt;code&gt;UTF-8&lt;/code&gt;编码应运而生。&lt;/p&gt;
&lt;h2 id=&quot;通用字符编码工作方式&quot;&gt;&lt;a href=&quot;#通用字符编码工作方式&quot; class=&quot;headerlink&quot; title=&quot;通用字符编码工作方式&quot;&gt;&lt;/a&gt;通用字符编码工作方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;在计算机内存中，都统一使用&lt;code&gt;Unicode&lt;/code&gt;编码。当你需要保存数据到计算机硬盘或者需要通过网络传输数据的时候，就可以转换成&lt;code&gt;UTF-8&lt;/code&gt;编码；当你需要用编辑器编辑的时候，就可以把&lt;code&gt;UTF-8&lt;/code&gt;编码的字符转成&lt;code&gt;Unicode&lt;/code&gt;字符存到内存中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;运用环境&quot;&gt;&lt;a href=&quot;#运用环境&quot; class=&quot;headerlink&quot; title=&quot;运用环境&quot;&gt;&lt;/a&gt;运用环境&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;例如:一般网页编程的时候会在&lt;code&gt;JSP&lt;/code&gt;页面添加：&lt;br&gt;&lt;figure class=&quot;highlight jsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;meta http-equiv=&lt;span class=&quot;string&quot;&gt;&quot;content-type&quot;&lt;/span&gt; content=&lt;span class=&quot;string&quot;&gt;&quot;text/html;charset=utf-8&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;因为Servlet规范默认是使用ISO-8559-1编码，所以也需要设置编码格式，如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;request.setCharacterEncoding(&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.setContentType(&lt;span class=&quot;string&quot;&gt;&quot;text/html;charset=utf-8&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;值得注意的是:当你设置响应的编码格式是&lt;code&gt;utf-8&lt;/code&gt;，在&lt;code&gt;TCP/IP Monitor&lt;/code&gt;截获到的数据显示可能会乱码，为什么呢？这是因为一般本地&lt;code&gt;MyEclipse&lt;/code&gt;默认编码、解码格式是&lt;code&gt;gbk&lt;/code&gt;，当流向&lt;code&gt;MyEclipse&lt;/code&gt;界面输出的数据编码格式是&lt;code&gt;utf-8&lt;/code&gt;，那么解码后的数据就会出现乱码。&lt;br&gt;&amp;emsp;&amp;emsp;一般的Java程序，文件流的默认编码格式是在&lt;code&gt;JVM&lt;/code&gt;刚启动的时候从本机系统配置文件读取的，这点也要记住！&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;临时想到一点: 本文网址是&lt;code&gt;http://res2013.github.io/2016/05/16/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E6%B5%85%E8%B0%88/&lt;/code&gt;，那么后面的这个字符串&lt;code&gt;%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E6%B5%85%E8%B0%88&lt;/code&gt;是相关的API用&lt;code&gt;%&lt;/code&gt;符号把十六进制数隔开了，去掉&lt;code&gt;%&lt;/code&gt;符号，每三个十六进制数对应三个字节，也就是对应一个汉字，刚好十八个十六进制数，对应十八个字节即是六个汉字，也就是这篇文章的题目”字符编码浅谈”,这里用到的就是&lt;code&gt;utf-8&lt;/code&gt;编码(utf-8编码中，汉字通常是3个字节，只有生僻的字符是4-6个字节)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者 &lt;a href=&quot;https://www.github.com/Res2013&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Res2013&lt;/a&gt;&lt;br&gt;2016 年 05月 16日&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么有字符编码&quot;&gt;&lt;a href=&quot;#为什么有字符编码&quot; class=&quot;headerlink&quot; title=&quot;为什么有字符编码?&quot;&gt;&lt;/a&gt;为什么有字符编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能够处理。最早的时候只有127个大小写英文字母、数字和一些符号被编码到计算机里,称为&lt;code&gt;ASCII&lt;/code&gt;编码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是Unicode编码&quot;&gt;&lt;a href=&quot;#什么是Unicode编码&quot; class=&quot;headerlink&quot; title=&quot;什么是Unicode编码?&quot;&gt;&lt;/a&gt;什么是Unicode编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;code&gt;Unicode&lt;/code&gt;编码也叫做统一码、万国码、单一码，是计算机科学领域里的一项业界标准，包括字符集、编码方案等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;为什么有Unicode编码&quot;&gt;&lt;a href=&quot;#为什么有Unicode编码&quot; class=&quot;headerlink&quot; title=&quot;为什么有Unicode编码?&quot;&gt;&lt;/a&gt;为什么有Unicode编码?&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;全世界有几千多种语言，如中文有自己制定的&lt;code&gt;GB2312&lt;/code&gt;编码，日文有&lt;code&gt;Shift_JIS&lt;/code&gt;编码等等，那么如果在多语言混合的文本中就会出现乱码。那么这个时候&lt;code&gt;Unicode&lt;/code&gt;编码应运而生，所有语言都统一使用同一套编码，这样就不会出现乱码问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="字符编码" scheme="http://Res2013.github.io/ss/categories/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    
    
      <category term="字符编码" scheme="http://Res2013.github.io/ss/tags/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
</feed>
