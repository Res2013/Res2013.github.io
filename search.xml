<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[字符编码浅谈]]></title>
      <url>http://Res2013.github.io/2016/05/16/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E6%B5%85%E8%B0%88/</url>
      <content type="html"><![CDATA[<h2 id="为什么有字符编码"><a href="#为什么有字符编码" class="headerlink" title="为什么有字符编码?"></a>为什么有字符编码?</h2><blockquote>
<p>&emsp;&emsp;计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能够处理。最早的时候只有127个大小写英文字母、数字和一些符号被编码到计算机里,称为<code>ASCII</code>编码。</p>
</blockquote>
<h2 id="什么是Unicode编码"><a href="#什么是Unicode编码" class="headerlink" title="什么是Unicode编码?"></a>什么是Unicode编码?</h2><blockquote>
<p>&emsp;&emsp;<code>Unicode</code>编码也叫做统一码、万国码、单一码，是计算机科学领域里的一项业界标准，包括字符集、编码方案等。</p>
</blockquote>
<h2 id="为什么有Unicode编码"><a href="#为什么有Unicode编码" class="headerlink" title="为什么有Unicode编码?"></a>为什么有Unicode编码?</h2><blockquote>
<p>&emsp;&emsp;全世界有几千多种语言，如中文有自己制定的<code>GB2312</code>编码，日文有<code>Shift_JIS</code>编码等等，那么如果在多语言混合的文本中就会出现乱码。那么这个时候<code>Unicode</code>编码应运而生，所有语言都统一使用同一套编码，这样就不会出现乱码问题。</p>
</blockquote>
<a id="more"></a>
<h2 id="为什么有UTF-8编码"><a href="#为什么有UTF-8编码" class="headerlink" title="为什么有UTF-8编码?"></a>为什么有UTF-8编码?</h2><blockquote>
<p>&emsp;&emsp;虽然统一了编码格式，解决了乱码问题，但是新的问题又产生了，是什么呢?<br><code>ASCII</code>编码是1个字节，Unicode编码通常是2个字节，如下图所示:</p>
</blockquote>
<table>
<thead>
<tr>
<th>字符</th>
<th style="text-align:right">ASCII</th>
<th style="text-align:right">Unicode</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td style="text-align:right">01000001</td>
<td style="text-align:right">00000000 01000001</td>
</tr>
<tr>
<td>‘0’</td>
<td style="text-align:right">00110000</td>
<td style="text-align:right">00000000 00110000</td>
</tr>
</tbody>
</table>
<p>那么如果你所写的文本基本上是类似字符<code>A</code>和字符<code>0</code>这样的数据的话，使用<code>Unicode</code>编码就会比<code>ASCII</code>编码多出一倍的存储空间，在存储和传输上就会非常不划算。所以，此时”可变长编码”的<code>UTF-8</code>编码应运而生。</p>
<h2 id="通用字符编码工作方式"><a href="#通用字符编码工作方式" class="headerlink" title="通用字符编码工作方式"></a>通用字符编码工作方式</h2><blockquote>
<p>&emsp;&emsp;在计算机内存中，都统一使用<code>Unicode</code>编码，当你需要保存数据到计算机硬盘或者需要通过网络传输出具的时候，就可以转换成<code>UTF-8</code>编码。当你需要用编辑器编辑的时候，就可以把<code>UTF-8</code>编码的字符转成<code>Unicode</code>字符存到内存中</p>
</blockquote>
<h2 id="运用环境"><a href="#运用环境" class="headerlink" title="运用环境"></a>运用环境</h2><blockquote>
<p>&emsp;&emsp;例如:一般网页编程的时候会在<code>JSP</code>页面添加：<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>resp.setContentType(“text/html;charset=utf-8”);因为Servlet规范默认是使用ISO-8559-1编码，所以也需要设置编码格式，如下： </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">...</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>值得注意的是:当你设置响应的编码格式是<code>utf-8</code>，在<code>TCP/IP Monitor</code>截获到的数据显示可能会乱码，为什么呢？这是因为一般本地<code>MyEclipse</code>默认编码、解码格式是<code>gbk</code>，当流向<code>MyEclipse</code>界面输出的数据编码格式是<code>utf-8</code>，那么解码后的数据就会出现乱码。</p>
<p>&emsp;&emsp;一般的Java程序，文件流的默认编码格式是在<code>JVM</code>刚启动的时候从本机系统配置文件读取的，这点也要记住！</p>
</blockquote>
<p>作者 <a href="https://www.github.com/Res2013" target="_blank" rel="external">@Res2013</a><br>2016 年 05月 16日</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[像玉的石头]]></title>
      <url>http://Res2013.github.io/2016/05/15/%E5%83%8F%E7%8E%89%E7%9A%84%E7%9F%B3%E5%A4%B4/</url>
      <content type="html"><![CDATA[<p>你说相遇是休止符的前奏<br>你说结局是道不尽的悔疚<br>你说黑夜让人失声无法嘶吼<br>你说孤独让人沉溺忘了求救<br>我心弦易动音纷纷<br>后来都化成世间赞美的裂纹<br>直到恐惧布满诱人的全身<br>像玉的石头坚硬是不破碎的借口<br>美丽是赶不走的忧愁<br><a id="more"></a><br>你的笑是教人贪杯的毒酒<br>醉生梦死不过似是而非的出走<br>歇斯底里亦无人感同身受<br>粉身碎骨也许才最享受</p>
<p>你说掌纹是解不开的魔咒<br>你说命运是没名字的情仇<br>你说拥抱让人温暖不敢奢求<br>你说疼痛让人麻木丢掉温柔<br>我心弦易动音纷纷<br>后来都化成世间赞美的裂纹<br>直到恐惧布满诱人的全身<br>像玉的石头<br>坚硬是不破碎的借口<br>美丽是赶不走的忧愁<br>你的笑是教人贪杯的毒酒<br>醉生梦死不过似是而非的出走<br>歇斯底里亦无人感同身受<br>粉身碎骨也许才最享受</p>
<p>像玉的石头<br>愿你远离恶言相向<br>愿你找回孤独一掷的疯狂<br>像玉的石头<br>愿你真实一如往常<br>愿你走在只属于你的路上<br>像玉的石头<br>愿你不再那么匆忙<br>愿你能有值得停留的家乡 </p>
<p>作者:不详</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建静态博客并部署到GitHub]]></title>
      <url>http://Res2013.github.io/2016/05/14/GitHub%E4%B8%8A%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<blockquote>
<p>这篇文章主要是记录利用Hexo搭建静态博客并部署到GitHub.</p>
</blockquote>
<h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p><strong>hexo</strong> 是一个基于<code>Node.js</code>的静态博客程序，代码托管在<a href="http://www.github.com" target="_blank" rel="external">GitHub</a>上。</p>
<h3 id="为什么用Hexo"><a href="#为什么用Hexo" class="headerlink" title="为什么用Hexo"></a>为什么用Hexo</h3><p><code>Hexo</code>简单优雅，而且风格多变，适合搭建个人博客，且支持多平台</p>
<a id="more"></a>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装msysgit和node-js"><a href="#安装msysgit和node-js" class="headerlink" title="安装msysgit和node.js"></a>安装<a href="https://git-for-windows.github.io/" target="_blank" rel="external">msysgit</a>和<a href="https://nodejs.org/en/" target="_blank" rel="external">node.js</a></h3><p>利用<code>node.js</code>里自带的<code>npm</code>安装<code>hexo</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="创建站点"><a href="#创建站点" class="headerlink" title="创建站点"></a>创建站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;blogfolder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;blogfolder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<h3 id="安装所依赖的插件"><a href="#安装所依赖的插件" class="headerlink" title="安装所依赖的插件"></a>安装所依赖的插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> &lt;blogfolder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>我目前用的是比较火的Next主题</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:iissnan/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure>
<p>下载的主题放到<code>blogfolder</code>里的<code>thems/next</code>目录下</p>
<h3 id="配置站点的-config-yml文件"><a href="#配置站点的-config-yml文件" class="headerlink" title="配置站点的_config.yml文件"></a>配置站点的_config.yml文件</h3><p>复制过来的主题在<code>_config.yml</code>中配置,如:</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: theme-name</span><br></pre></td></tr></table></figure>
<p>更多配置信息参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo官方文档</a>和<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">NexT主题配置文档</a></p>
<p>更多文章排版信息请访问<a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">@Cmd Markdown编辑阅读器</a></p>
<h3 id="本地测试博客"><a href="#本地测试博客" class="headerlink" title="本地测试博客"></a>本地测试博客</h3><h4 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generator// 可简写`hexo g`</span><br><span class="line">$ hexo server// 调试模式可以加上`--debug`,也可简写为`hexo s`</span><br></pre></td></tr></table></figure>
<p>通过<code>localhost:4000</code>本地访问博客站点</p>
<h3 id="部署博客到Github上"><a href="#部署博客到Github上" class="headerlink" title="部署博客到Github上"></a>部署博客到Github上</h3><blockquote>
<ul>
<li><p>前提条件是GitHub上已添加<code>SSH Key</code><a href="https://help.github.com/articles/checking-for-existing-ssh-keys/" target="_blank" rel="external">GitHub SSH Keys Guide</a></p>
</li>
<li><p>GitHub上新建一个项目,项目名必须为:<code>username.github.io</code></p>
</li>
</ul>
</blockquote>
<h4 id="配置站点的-config-yml文件-1"><a href="#配置站点的-config-yml文件-1" class="headerlink" title="配置站点的_config.yml文件"></a>配置站点的<code>_config.yml</code>文件</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="code">	type: git// Hexo更新到3.0以后type由github改成了git</span></span><br><span class="line"><span class="code">	repository: git@github.com:username/username.github.io.git</span></span><br><span class="line"><span class="code">	branch: master</span></span><br></pre></td></tr></table></figure>
<h4 id="部署到username-github-io项目上"><a href="#部署到username-github-io项目上" class="headerlink" title="部署到username.github.io项目上"></a>部署到<code>username.github.io</code>项目上</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy// 可简写为`hexo d`</span><br></pre></td></tr></table></figure>
<p>作者 <a href="https://github.com/Res2013" target="_blank" rel="external">@Res2013</a><br>2016 年 05月 14日</p>
]]></content>
    </entry>
    
  
  
</search>
